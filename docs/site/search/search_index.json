{"config":{"lang":["zh"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"index.html","title":"tkfluent ( <code>tkflu</code> )","text":"<p><code>tkfluent</code>\u662f\u73b0\u4ee3\u5316<code>tkinter</code>\u7b2c\u4e09\u65b9\u754c\u9762\u5e93\uff0c\u8bbe\u8ba1\u91c7\u7528<code>winui3</code>\u7684<code>sunvalley</code>(\u6216<code>fluent</code>)\u8bbe\u8ba1\u3002</p> <p>\u524d\u8eab</p> <p><code>tkfluent</code>\u539f\u672c\u662f<code>tkdeft</code>\u7684\u9ed8\u8ba4\u6a21\u677f\u754c\u9762\u5e93\uff0c\u540e\u9762\u53c8\u5355\u72ec\u79fb\u51fa</p> <p>\u70b9\u51fb\u67e5\u9605tkdeft\u6587\u6863</p>"},{"location":"index.html#_1","title":"\u652f\u6301\u7684\u7ec4\u4ef6","text":"\u7ec4\u4ef6 \u7b80\u8ff0 \u53ef\u7528\u7a0b\u5ea6 FluBadge(FluChip) \u5fbd\u7ae0\u7ec4\u4ef6 \u5b8c\u5584 FluButton(FluPushButton) \u6309\u94ae\u7ec4\u4ef6 \u5b8c\u5584 FluCheckBox \u591a\u9009\u6846\u7ec4\u4ef6 \u6682\u672a\u5f00\u59cb\u5236\u4f5c FluRadioBox \u5355\u9009\u6846\u7ec4\u4ef6 \u6682\u672a\u5f00\u59cb\u5236\u4f5c FluEntry(FluTextInput) \u8f93\u5165\u6846\u7ec4\u4ef6 \u8f83\u4e3a\u5b8c\u5584 FluFrame(FluPanel) \u5bb9\u5668\u7ec4\u4ef6 \u8f83\u4e3a\u5b8c\u5584 FluImage \u56fe\u7247\u7ec4\u4ef6 \u6682\u672a\u5f00\u59cb\u5236\u4f5c FluLabel \u6807\u7b7e\u7ec4\u4ef6 \u5b8c\u5584 FluListBox \u6807\u7b7e\u7ec4\u4ef6 \u6682\u672a\u5236\u4f5c\u5b8c\u6210 FluMenuBar \u83dc\u5355\u680f\u7ec4\u4ef6 \u8f83\u4e3a\u5b8c\u5584 FluMenu \u5d4c\u5957\u5728\u83dc\u5355\u680f\u7684\u83dc\u5355\u7ec4\u4ef6  \u8f83\u4e3a\u4e0d\u8db3 FluPopupMenu \u5f39\u51fa\u83dc\u5355\u7ec4\u4ef6 \u8f83\u4e3a\u5b8c\u5584 FluPopupWindow \u5f39\u51fa\u7a97\u53e3 \u8f83\u4e3a\u5b8c\u5584 FluScrollBar \u6eda\u52a8\u680f\u7ec4\u4ef6 \u6682\u672a\u5236\u4f5c\u5b8c\u6210 FluSlider \u6ed1\u5757\u7ec4\u4ef6 \u8f83\u4e3a\u5b8c\u5584 FluText(FluTextBox) \u6587\u672c\u7f16\u8f91\u6846\u7a97\u53e3 \u8f83\u4e3a\u5b8c\u5584 FluToggleButton \u5207\u6362\u6309\u94ae\u7ec4\u4ef6 \u5b8c\u5584 FluToolTip \u5de5\u5177\u63d0\u793a\u7ec4\u4ef6 \u8f83\u4e3a\u5b8c\u5584 FluToplevel(FluSubWindow) \u5b50\u7a97\u53e3\u7ec4\u4ef6 \u8f83\u4e3a\u5b8c\u5584 FluWindow(FluMainWindow) \u4e3b\u7a97\u53e3\u7ec4\u4ef6 \u8f83\u4e3a\u5b8c\u5584"},{"location":"api/index.html","title":"API\u6587\u6863","text":"<p>api\u6587\u6863\u5747\u4f7f\u7528<code>mkdocstrings</code>\u751f\u6210\u3002</p> <p>\u987a\u4fbf\u8bf4\u53e5\uff0c\u4e00\u4e2a\u4eba\u5199\u6ce8\u91ca\u3001\u6587\u6863\u592a\u96be\u4e86\ud83d\ude2d</p>"},{"location":"api/tkflu.badge.html","title":"tkflu.badge","text":""},{"location":"api/tkflu.badge.html#tkflu.badge.FluBadge","title":"<code>FluBadge</code>","text":"<p>               Bases: <code>FluBadgeCanvas</code>, <code>DDrawWidget</code>, <code>FluToolTipBase</code></p> Source code in <code>tkflu\\badge.py</code> <pre><code>class FluBadge(FluBadgeCanvas, DDrawWidget, FluToolTipBase):\n\n    def __init__(self, *args,\n                 text=\"\",\n                 width=70,\n                 height=30,\n                 font=None,\n                 mode=\"light\",\n                 style=\"standard\",\n                 **kwargs):\n\n        \"\"\"\n\n        \u521d\u59cb\u5316\u7c7b\n\n        :param args: \u53c2\u7167tkinter.Canvas.__init__\n        :param text:\n        :param width:\n        :param height:\n        :param font:\n        :param mode: Fluent\u4e3b\u9898\u6a21\u5f0f \u5206\u4e3a \u201clight\u201d \u201cdark\u201d\n        :param style:\n        :param kwargs: \u53c2\u7167tkinter.Canvas.__init__\n        \"\"\"\n\n        self._init(mode, style)\n\n        super().__init__(*args, width=width, height=height, **kwargs)\n\n        self.dconfigure(\n            text=text,\n        )\n\n        self.bind(\"&lt;&lt;Clicked&gt;&gt;\", lambda event=None: self.focus_set(), add=\"+\")\n\n        from .defs import set_default_font\n        set_default_font(font, self.attributes)\n\n    def _init(self, mode, style):\n        from easydict import EasyDict\n\n        self.attributes = EasyDict(\n            {\n                \"text\": \"\",\n                \"command\": None,\n                \"font\": None,\n\n                \"back_color\": None,\n                \"back_opacity\": None,\n                \"border_color\": None,\n                \"border_color_opacity\": None,\n                \"border_width\": None,\n                \"text_color\": None\n            }\n        )\n\n        self.theme(mode, style)\n\n    def _draw(self, event=None):\n\n        \"\"\"\n        \u91cd\u65b0\u7ed8\u5236\u7ec4\u4ef6\n\n        :param event:\n        \"\"\"\n\n        super()._draw(event)\n\n        self.delete(\"all\")\n\n        _back_color = self.attributes.back_color\n        _back_opacity = self.attributes.back_opacity\n        _border_color = self.attributes.border_color\n        _border_color_opacity = self.attributes.border_color_opacity\n        _border_width = self.attributes.border_width\n        _text_color = self.attributes.text_color\n\n        self.element_border = self.create_round_rectangle(\n            0, 0, self.winfo_width(), self.winfo_height(), temppath=self.temppath,\n            fill=_back_color, fill_opacity=_back_opacity,\n            outline=_border_color, outline_opacity=_border_color_opacity, width=_border_width\n        )\n\n        self.element_text = self.create_text(\n            self.winfo_width() / 2, self.winfo_height() / 2, anchor=\"center\",\n            fill=_text_color, text=self.attributes.text, font=self.attributes.font\n        )\n\n        self.after(10, lambda: self.update())\n\n    def theme(self, mode=None, style=None):\n        if mode:\n            self.mode = mode\n        if style:\n            self.style = style\n        if self.mode.lower() == \"dark\":\n            if self.style.lower() == \"accent\":\n                self._dark_accent()\n            else:\n                self._dark()\n        else:\n            if self.style.lower() == \"accent\":\n                self._light_accent()\n            else:\n                self._light()\n\n    def _theme(self, mode, style):\n        n = badge(mode, style)\n        self.dconfigure(\n            back_color=n[\"back_color\"],\n            back_opacity=n[\"back_opacity\"],\n            border_color=n[\"border_color\"],\n            border_color_opacity=n[\"border_color_opacity\"],\n            border_width=n[\"border_width\"],\n            text_color=n[\"text_color\"],\n        )\n\n    def _light(self):\n        self._theme(\"light\", \"standard\")\n\n    def _light_accent(self):\n        self._theme(\"light\", \"accent\")\n\n    def _dark(self):\n        self._theme(\"dark\", \"standard\")\n\n    def _dark_accent(self):\n        self._theme(\"dark\", \"accent\")\n</code></pre>"},{"location":"api/tkflu.badge.html#tkflu.badge.FluBadge.__init__","title":"<code>__init__(*args, text='', width=70, height=30, font=None, mode='light', style='standard', **kwargs)</code>","text":"<p>\u521d\u59cb\u5316\u7c7b</p> <p>:param args: \u53c2\u7167tkinter.Canvas.init :param text: :param width: :param height: :param font: :param mode: Fluent\u4e3b\u9898\u6a21\u5f0f \u5206\u4e3a \u201clight\u201d \u201cdark\u201d :param style: :param kwargs: \u53c2\u7167tkinter.Canvas.init</p> Source code in <code>tkflu\\badge.py</code> <pre><code>def __init__(self, *args,\n             text=\"\",\n             width=70,\n             height=30,\n             font=None,\n             mode=\"light\",\n             style=\"standard\",\n             **kwargs):\n\n    \"\"\"\n\n    \u521d\u59cb\u5316\u7c7b\n\n    :param args: \u53c2\u7167tkinter.Canvas.__init__\n    :param text:\n    :param width:\n    :param height:\n    :param font:\n    :param mode: Fluent\u4e3b\u9898\u6a21\u5f0f \u5206\u4e3a \u201clight\u201d \u201cdark\u201d\n    :param style:\n    :param kwargs: \u53c2\u7167tkinter.Canvas.__init__\n    \"\"\"\n\n    self._init(mode, style)\n\n    super().__init__(*args, width=width, height=height, **kwargs)\n\n    self.dconfigure(\n        text=text,\n    )\n\n    self.bind(\"&lt;&lt;Clicked&gt;&gt;\", lambda event=None: self.focus_set(), add=\"+\")\n\n    from .defs import set_default_font\n    set_default_font(font, self.attributes)\n</code></pre>"},{"location":"api/tkflu.button.html","title":"tkflu.button","text":""},{"location":"api/tkflu.button.html#tkflu.button.FluButton","title":"<code>FluButton</code>","text":"<p>               Bases: <code>FluButtonCanvas</code>, <code>DDrawWidget</code>, <code>FluToolTipBase</code>, <code>FluGradient</code></p> Source code in <code>tkflu\\button.py</code> <pre><code>class FluButton(FluButtonCanvas, DDrawWidget, FluToolTipBase, FluGradient):\n    def __init__(self, *args,\n                 text: Union[str, int, float]= \"\",\n                 width: Union[int, float] = 120,\n                 height: Union[int, float] = 32,\n                 command: callable = None,\n                 font: Union[Font, tuple] = None,\n                 mode: MODE = \"light\",\n                 style: BUTTONSTYLE = \"standard\",\n                 state: STATE = \"normal\",\n                 **kwargs) -&gt; None:\n        \"\"\"\n        \u6309\u94ae\u7ec4\u4ef6\n\n        Parameters:\n          text: \u6309\u94ae\u7684\u6807\u7b7e\u6587\u672c\n          width: \u9ed8\u8ba4\u5bbd\u5e26\n          height: \u9ed8\u8ba4\u9ad8\u5ea6\n          command: \u70b9\u51fb\u65f6\u51fa\u53d1\u7684\u4e8b\u4ef6\n          font: \u81ea\u5b9a\u4e49\u6807\u7b7e\u5b57\u4f53\n          mode: \u6309\u94ae\u6df1\u6d45\u4e3b\u9898\uff0c\u53c2\u8003tkflu.constants.MODE\n          style: \u6309\u94ae\u6837\u5f0f\uff0c\u53c2\u8003tkflu.constants.BUTTONSTYLE\n          state: \u6309\u94ae\u7684\u72b6\u6001\uff0c\u53c2\u8003tkflu.constants.STATE\n        \"\"\"\n        self._init(mode, style)\n\n        super().__init__(*args, width=width, height=height, **kwargs)\n\n        if command is None:\n            def empty(): pass\n\n            command = empty\n\n        self.dconfigure(\n            text=text,\n            command=command,\n            state=state,\n        )\n\n        self.bind(\"&lt;&lt;Clicked&gt;&gt;\", lambda event=None: self.focus_set(), add=\"+\")\n        self.bind(\"&lt;&lt;Clicked&gt;&gt;\", lambda event=None: self.attributes.command(), add=\"+\")\n\n        self.bind(\"&lt;Return&gt;\", lambda event=None: self.attributes.command(), add=\"+\")  # \u53ef\u4ee5\u4f7f\u7528\u56de\u8f66\u952e\u6a21\u62df\u70b9\u51fb\n\n        from .defs import set_default_font\n        set_default_font(font, self.attributes)\n\n    def _init(self, mode: MODE, style: BUTTONSTYLE):\n\n        \"\"\"\n        \u521d\u59cb\u5316\u6309\u94ae\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u65e0\u9700\u5728\u7a0b\u5e8f\u4e2d\u8c03\u7528\n\n        Parameters:\n          mode: \u6309\u94ae\u6df1\u6d45\u4e3b\u9898\uff0c\u53c2\u8003tkflu.constants.MODE\n          style: \u6309\u94ae\u6837\u5f0f\uff0c\u53c2\u8003tkflu.constants.BUTTONSTYLE\n        \"\"\"\n\n        from easydict import EasyDict\n\n        self.enter = False\n        self.button1 = False\n\n        self.attributes = EasyDict(\n            {\n                \"text\": \"\",\n                \"command\": None,\n                \"font\": None,\n                \"state\": \"normal\",\n\n                \"rest\": {},\n                \"hover\": {},\n                \"pressed\": {},\n                \"disabled\": {}\n            }\n        )\n\n        self.theme(mode=mode, style=style)\n\n    def _draw(self, event: Union[Event, None] = None, tempcolor: Union[dict, None] = None):\n        \"\"\"\n\n        Parameters:\n          \u7ed8\u5236\u6309\u94ae\n        \"\"\"\n        super()._draw(event)\n\n        width = self.winfo_width()\n        height = self.winfo_height()\n        # \u63d0\u524d\u5b9a\u4e49\uff0c\u53cd\u6b63\u591a\u6b21\u8c03\u7528\u6d6a\u8d39\u8d44\u6e90\n\n        state = self.dcget(\"state\")\n\n        _dict = None\n\n        if not tempcolor:\n            if state == \"normal\":\n                if self.enter:\n                    if self.button1:\n                        _dict = self.attributes.pressed\n                    else:\n                        _dict = self.attributes.hover\n                else:\n                    _dict = self.attributes.rest\n            else:\n                _dict = self.attributes.disabled\n\n            _back_color = _dict.back_color\n            _back_opacity = _dict.back_opacity\n            _border_color = _dict.border_color\n            _border_color_opacity = _dict.border_color_opacity\n            _border_color2 = _dict.border_color2\n            _border_color2_opacity = _dict.border_color2_opacity\n            _border_width = _dict.border_width\n            _radius = _dict.radius\n            _text_color = _dict.text_color\n        else:\n            _back_color = tempcolor.back_color\n            _back_opacity = tempcolor.back_opacity\n            _border_color = tempcolor.border_color\n            _border_color_opacity = tempcolor.border_color_opacity\n            _border_color2 = tempcolor.border_color2\n            _border_color2_opacity = tempcolor.border_color2_opacity\n            _border_width = tempcolor.border_width\n            _radius = tempcolor.radius\n            _text_color = tempcolor.text_color\n\n        if hasattr(self, \"element_border\"):\n            self.delete(self.element_border)\n\n        self.element_border = self.create_round_rectangle(\n            0, 0, width, height, _radius, temppath=self.temppath,\n            fill=_back_color, fill_opacity=_back_opacity,\n            outline=_border_color, outline_opacity=_border_color_opacity, outline2=_border_color2,\n            outline2_opacity=_border_color2_opacity,\n            width=_border_width,\n        )\n\n        if hasattr(self, \"element_text\"):\n            self.itemconfigure(self.element_text, fill=_text_color, text=self.attributes.text, font=self.attributes.font)\n            self.coords(self.element_text, width / 2, height / 2)\n        else:\n            self.element_text = self.create_text(\n                width / 2, height / 2, anchor=\"center\",\n                fill=_text_color, text=self.attributes.text, font=self.attributes.font\n            )\n        self.tag_raise(self.element_text, self.element_border)\n\n        self.update()\n\n    def theme(self, mode: MODE = None, style: BUTTONSTYLE = None):\n        if mode:\n            self.mode = mode\n        if style:\n            self.style = style\n        theme_handlers = {\n            (\"light\", \"accent\"): self._light_accent,\n            (\"light\", \"menu\"): self._light_menu,\n            (\"light\", \"standard\"): self._light,\n            (\"dark\", \"accent\"): self._dark_accent,\n            (\"dark\", \"menu\"): self._dark_menu,\n            (\"dark\", \"standard\"): self._dark,\n        }\n        handler = theme_handlers.get((self.mode.lower(), self.style.lower()))\n        handler()\n        \"\"\"if self.mode.lower() == \"dark\":\n            if self.style.lower() == \"accent\":\n                self._dark_accent()\n            elif self.style.lower() == \"menu\":\n                self._dark_menu()\n            else:\n                self._dark()\n        else:\n            if self.style.lower() == \"accent\":\n                self._light_accent()\n            elif self.style.lower() == \"menu\":\n                self._light_menu()\n            else:\n                self._light()\"\"\"\n\n    def _theme(self, mode: MODE, style: BUTTONSTYLE, animation_steps: int = None, animation_step_time: int = None):\n        if animation_steps is None:\n            from .designs.animation import get_animation_steps\n            animation_steps = get_animation_steps()\n        if animation_step_time is None:\n            from .designs.animation import get_animation_step_time\n            animation_step_time = get_animation_step_time()\n        r = button(mode, style, \"rest\")\n        h = button(mode, style, \"hover\")\n        p = button(mode, style, \"pressed\")\n        d = button(mode, style, \"disabled\")\n        if not animation_steps == 0 or not animation_step_time == 0:\n            if self.dcget(\"state\") == \"normal\":\n                if self.enter:\n                    if self.button1:\n                        now = p\n                    else:\n                        now = h\n                else:\n                    now = r\n            else:\n                now = d\n            #print(animation_step_time)\n            #print(type(animation_step_time))\n            if hasattr(self.attributes.rest, \"back_color\"):\n                back_colors = self.generate_hex2hex(\n                    self.attributes.rest.back_color, now[\"back_color\"], animation_steps\n                )\n                border_colors = self.generate_hex2hex(\n                    self.attributes.rest.border_color, now[\"border_color\"], animation_steps\n                )\n                if self.attributes.rest.border_color2 is None:\n                    self.attributes.rest.border_color2 = self.attributes.rest.border_color\n                if now[\"border_color2\"] is None:\n                    now[\"border_color2\"] = now[\"border_color\"]\n                border_colors2 = self.generate_hex2hex(\n                    self.attributes.rest.border_color2, now[\"border_color2\"], animation_steps\n                )\n                text_colors = self.generate_hex2hex(\n                    self.attributes.rest.text_color, now[\"text_color\"], animation_steps\n                )\n                import numpy as np\n                back_opacitys = np.linspace(\n                    float(self.attributes.rest.back_opacity), float(now[\"back_opacity\"]), animation_steps).tolist()\n                border_color_opacitys = np.linspace(\n                    float(self.attributes.rest.border_color_opacity), float(now[\"border_color_opacity\"]), animation_steps).tolist()\n                if self.attributes.rest.border_color2_opacity is None:\n                    self.attributes.rest.border_color2_opacity = self.attributes.rest.border_color_opacity\n                if now[\"border_color2_opacity\"] is None:\n                    now[\"border_color2_opacity\"] = now[\"border_color_opacity\"]\n                border_color2_opacitys = np.linspace(\n                    float(self.attributes.rest.border_color2_opacity), float(now[\"border_color2_opacity\"]), animation_steps).tolist()\n                for i in range(animation_steps):\n                    def update(ii=i):\n                        from easydict import EasyDict\n                        tempcolor = EasyDict(\n                            {\n                                \"back_color\": back_colors[ii],\n                                \"back_opacity\": back_opacitys[ii],\n                                \"border_color\": border_colors[ii],\n                                \"border_color_opacity\": str(border_color_opacitys[ii]),\n                                \"border_color2\": border_colors2[ii],\n                                \"border_color2_opacity\": str(border_color2_opacitys[ii]),\n                                \"border_width\": 1,\n                                \"text_color\": text_colors[ii],\n                                \"radius\": 6,\n                            }\n                        )\n                        self._draw(None, tempcolor)\n\n                    self.after(i * animation_step_time, update)\n                #self.after(animation_steps * animation_step_time + 10, lambda: self._draw(None, None))\n\n        self.dconfigure(\n            rest={\n                \"back_color\": r[\"back_color\"],\n                \"back_opacity\": r[\"back_opacity\"],\n                \"border_color\": r[\"border_color\"],\n                \"border_color_opacity\": r[\"border_color_opacity\"],\n                \"border_color2\": r[\"border_color2\"],\n                \"border_color2_opacity\": r[\"border_color2_opacity\"],\n                \"border_width\": r[\"border_width\"],\n                \"radius\": r[\"radius\"],\n                \"text_color\": r[\"text_color\"],\n            },\n            hover={\n                \"back_color\": h[\"back_color\"],\n                \"back_opacity\": h[\"back_opacity\"],\n                \"border_color\": h[\"border_color\"],\n                \"border_color_opacity\": h[\"border_color_opacity\"],\n                \"border_color2\": h[\"border_color2\"],\n                \"border_color2_opacity\": h[\"border_color2_opacity\"],\n                \"border_width\": h[\"border_width\"],\n                \"radius\": h[\"radius\"],\n                \"text_color\": h[\"text_color\"],\n            },\n            pressed={\n                \"back_color\": p[\"back_color\"],\n                \"back_opacity\": p[\"back_opacity\"],\n                \"border_color\": p[\"border_color\"],\n                \"border_color_opacity\": p[\"border_color_opacity\"],\n                \"border_color2\": p[\"border_color2\"],\n                \"border_color2_opacity\": p[\"border_color2_opacity\"],\n                \"border_width\": p[\"border_width\"],\n                \"radius\": p[\"radius\"],\n                \"text_color\": p[\"text_color\"],\n            },\n            disabled={\n                \"back_color\": d[\"back_color\"],\n                \"back_opacity\": d[\"back_opacity\"],\n                \"border_color\": d[\"border_color\"],\n                \"border_color_opacity\": d[\"border_color_opacity\"],\n                \"border_color2\": d[\"border_color2\"],\n                \"border_color2_opacity\": d[\"border_color2_opacity\"],\n                \"border_width\": d[\"border_width\"],\n                \"radius\": d[\"radius\"],\n                \"text_color\": d[\"text_color\"],\n            }\n        )\n\n    def _light(self):\n        self._theme(\"light\", \"standard\")\n\n    def _light_menu(self):\n        self._theme(\"light\", \"menu\")\n\n    def _light_accent(self):\n        self._theme(\"light\", \"accent\")\n\n    def _dark(self):\n        self._theme(\"dark\", \"standard\")\n\n    def _dark_menu(self):\n        self._theme(\"dark\", \"menu\")\n\n    def _dark_accent(self):\n        self._theme(\"dark\", \"accent\")\n\n    def invoke(self):\n        self.attributes.command()\n\n    def _event_off_button1(self, event: Event = None):\n        self.button1 = False\n\n        self._draw(event)\n\n        if self.enter:\n            # self.focus_set()\n            if self.dcget(\"state\") == \"normal\":\n                self.event_generate(\"&lt;&lt;Clicked&gt;&gt;\")\n</code></pre>"},{"location":"api/tkflu.button.html#tkflu.button.FluButton.__init__","title":"<code>__init__(*args, text='', width=120, height=32, command=None, font=None, mode='light', style='standard', state='normal', **kwargs)</code>","text":"<p>\u6309\u94ae\u7ec4\u4ef6</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>Union[str, int, float]</code> <p>\u6309\u94ae\u7684\u6807\u7b7e\u6587\u672c</p> <code>''</code> <code>width</code> <code>Union[int, float]</code> <p>\u9ed8\u8ba4\u5bbd\u5e26</p> <code>120</code> <code>height</code> <code>Union[int, float]</code> <p>\u9ed8\u8ba4\u9ad8\u5ea6</p> <code>32</code> <code>command</code> <code>callable</code> <p>\u70b9\u51fb\u65f6\u51fa\u53d1\u7684\u4e8b\u4ef6</p> <code>None</code> <code>font</code> <code>Union[Font, tuple]</code> <p>\u81ea\u5b9a\u4e49\u6807\u7b7e\u5b57\u4f53</p> <code>None</code> <code>mode</code> <code>MODE</code> <p>\u6309\u94ae\u6df1\u6d45\u4e3b\u9898\uff0c\u53c2\u8003tkflu.constants.MODE</p> <code>'light'</code> <code>style</code> <code>BUTTONSTYLE</code> <p>\u6309\u94ae\u6837\u5f0f\uff0c\u53c2\u8003tkflu.constants.BUTTONSTYLE</p> <code>'standard'</code> <code>state</code> <code>STATE</code> <p>\u6309\u94ae\u7684\u72b6\u6001\uff0c\u53c2\u8003tkflu.constants.STATE</p> <code>'normal'</code> Source code in <code>tkflu\\button.py</code> <pre><code>def __init__(self, *args,\n             text: Union[str, int, float]= \"\",\n             width: Union[int, float] = 120,\n             height: Union[int, float] = 32,\n             command: callable = None,\n             font: Union[Font, tuple] = None,\n             mode: MODE = \"light\",\n             style: BUTTONSTYLE = \"standard\",\n             state: STATE = \"normal\",\n             **kwargs) -&gt; None:\n    \"\"\"\n    \u6309\u94ae\u7ec4\u4ef6\n\n    Parameters:\n      text: \u6309\u94ae\u7684\u6807\u7b7e\u6587\u672c\n      width: \u9ed8\u8ba4\u5bbd\u5e26\n      height: \u9ed8\u8ba4\u9ad8\u5ea6\n      command: \u70b9\u51fb\u65f6\u51fa\u53d1\u7684\u4e8b\u4ef6\n      font: \u81ea\u5b9a\u4e49\u6807\u7b7e\u5b57\u4f53\n      mode: \u6309\u94ae\u6df1\u6d45\u4e3b\u9898\uff0c\u53c2\u8003tkflu.constants.MODE\n      style: \u6309\u94ae\u6837\u5f0f\uff0c\u53c2\u8003tkflu.constants.BUTTONSTYLE\n      state: \u6309\u94ae\u7684\u72b6\u6001\uff0c\u53c2\u8003tkflu.constants.STATE\n    \"\"\"\n    self._init(mode, style)\n\n    super().__init__(*args, width=width, height=height, **kwargs)\n\n    if command is None:\n        def empty(): pass\n\n        command = empty\n\n    self.dconfigure(\n        text=text,\n        command=command,\n        state=state,\n    )\n\n    self.bind(\"&lt;&lt;Clicked&gt;&gt;\", lambda event=None: self.focus_set(), add=\"+\")\n    self.bind(\"&lt;&lt;Clicked&gt;&gt;\", lambda event=None: self.attributes.command(), add=\"+\")\n\n    self.bind(\"&lt;Return&gt;\", lambda event=None: self.attributes.command(), add=\"+\")  # \u53ef\u4ee5\u4f7f\u7528\u56de\u8f66\u952e\u6a21\u62df\u70b9\u51fb\n\n    from .defs import set_default_font\n    set_default_font(font, self.attributes)\n</code></pre>"},{"location":"api/tkflu.button.html#tkflu.button.FluButtonCanvas","title":"<code>FluButtonCanvas</code>","text":"<p>               Bases: <code>DCanvas</code></p> Source code in <code>tkflu\\button.py</code> <pre><code>class FluButtonCanvas(DCanvas):\n\n    draw = FluButtonDraw  # \u8bbe\u7f6esvg\u7ed8\u56fe\u5f15\u64ce\n\n    def create_round_rectangle(self,\n                               x1: Union[int, float], y1: Union[int, float], x2: Union[int, float], y2: Union[int, float],\n                               r1: Union[int, float], r2: Union[int, float] = None, temppath: Union[str, None] = None,\n                               fill: Union[str, tuple]=\"transparent\", fill_opacity: Union[int, float] = 1,\n                               outline: Union[str, tuple] = \"black\", outline2: Union[str, tuple] = \"black\",\n                               outline_opacity: Union[int, float] = 1, outline2_opacity: Union[int, float] = 1,\n                               width: Union[int, float] = 1, *args, **kwargs\n                               ) -&gt; int:\n        \"\"\"\n        \u5728\u753b\u5e03\u4e0a\u521b\u5efa\u4e2a\u5706\u89d2\u77e9\u5f62\n\n        Parameters:\n          x1: \u7b2c\u4e00\u4e2ax\u8f74\u7684\u5750\u6807\n          y1: \u7b2c\u4e00\u4e2ay\u8f74\u7684\u5750\u6807\n          x2: \u7b2c\u4e8c\u4e2ax\u8f74\u7684\u5750\u6807\uff0c\u4e0ex1\u8fde\u8d77\u6765\n          y2: \u7b2c\u4e8c\u4e2ay\u8f74\u7684\u5750\u6807\uff0c\u4e0ey1\u8fde\u8d77\u6765\n          r1: \u5706\u89d2\u5927\u5c0f\n          r2: \u5706\u89d2\u5927\u5c0f\uff08y\u8f74\u65b9\u5411\uff09\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u5c06\u9ed8\u8ba4\u4e3a\u53c2\u6570r1\u7684\u503c\n          temppath: \u4e34\u65f6\u6587\u4ef6\u5730\u5740\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\uff0c\u5c31\u522b\u8bbe\u7f6e\n          fill: \u80cc\u666f\u989c\u8272\n          fill_opacity: \u80cc\u666f\u900f\u660e\u5ea6\n          outline: \u8fb9\u6846\u989c\u8272\n          outline2: \u8fb9\u6846\u989c\u82722\uff08\u6e10\u53d8\uff09\uff0c\u5982\u679c\u53d6\u4e86\u8fd9\u4e2a\u503c\uff0c\u8fb9\u6846\u5c06\u4f1a\u53d8\u4e3a\u6e10\u53d8\uff0c\u4ece\u5de6\u5230\u53f3\uff0coutline\u4e3a\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272,outline2\u4e3a\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\n          outline_opacity: \u8fb9\u6846\u900f\u660e\u5ea6\n          outline2_opacity: \u7b2c\u4e8c\u4e2a\u8fb9\u6846\u6e10\u53d8\u989c\u8272\u7684\u900f\u660e\u5ea6\uff0c\u5982\u679coutline\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u8fd9\u4e2a\u503c\u4e0d\u4f1a\u88ab\u7528\u5230\n          width: \u8fb9\u6846\u5bbd\u5ea6\n\n        Returns: svg\u56fe\u7247\u4fdd\u5b58\u5730\u5740\n        \"\"\"\n        self._img = self.svgdraw.create_roundrect(\n            x1, y1, x2, y2, r1, r2, temppath=temppath,\n            fill=fill, fill_opacity=fill_opacity,\n            outline=outline, outline2=outline2, outline_opacity=outline_opacity, outline2_opacity=outline2_opacity,\n            width=width,\n        )  # \u521b\u5efa\u4e2asvg\u5706\u89d2\u77e9\u5f62\u56fe\u7247\n        self._tkimg = self.svgdraw.create_tksvg_image(self._img)  # \u7528tksvg\u8bfb\u53d6svg\u56fe\u7247\n        return self.create_image(x1, y1, anchor=\"nw\", image=self._tkimg, *args, **kwargs)  # \u5728\u753b\u5e03\u4e0a\u521b\u5efa\u4e2a\u4ee5svg\u56fe\u7247\u4e3a\u56fe\u7247\u7684\u5143\u4ef6\n\n    create_roundrect = create_round_rectangle  # \u7f29\u5199\n</code></pre>"},{"location":"api/tkflu.button.html#tkflu.button.FluButtonCanvas.create_round_rectangle","title":"<code>create_round_rectangle(x1, y1, x2, y2, r1, r2=None, temppath=None, fill='transparent', fill_opacity=1, outline='black', outline2='black', outline_opacity=1, outline2_opacity=1, width=1, *args, **kwargs)</code>","text":"<p>\u5728\u753b\u5e03\u4e0a\u521b\u5efa\u4e2a\u5706\u89d2\u77e9\u5f62</p> <p>Parameters:</p> Name Type Description Default <code>x1</code> <code>Union[int, float]</code> <p>\u7b2c\u4e00\u4e2ax\u8f74\u7684\u5750\u6807</p> required <code>y1</code> <code>Union[int, float]</code> <p>\u7b2c\u4e00\u4e2ay\u8f74\u7684\u5750\u6807</p> required <code>x2</code> <code>Union[int, float]</code> <p>\u7b2c\u4e8c\u4e2ax\u8f74\u7684\u5750\u6807\uff0c\u4e0ex1\u8fde\u8d77\u6765</p> required <code>y2</code> <code>Union[int, float]</code> <p>\u7b2c\u4e8c\u4e2ay\u8f74\u7684\u5750\u6807\uff0c\u4e0ey1\u8fde\u8d77\u6765</p> required <code>r1</code> <code>Union[int, float]</code> <p>\u5706\u89d2\u5927\u5c0f</p> required <code>r2</code> <code>Union[int, float]</code> <p>\u5706\u89d2\u5927\u5c0f\uff08y\u8f74\u65b9\u5411\uff09\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u5c06\u9ed8\u8ba4\u4e3a\u53c2\u6570r1\u7684\u503c</p> <code>None</code> <code>temppath</code> <code>Union[str, None]</code> <p>\u4e34\u65f6\u6587\u4ef6\u5730\u5740\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\uff0c\u5c31\u522b\u8bbe\u7f6e</p> <code>None</code> <code>fill</code> <code>Union[str, tuple]</code> <p>\u80cc\u666f\u989c\u8272</p> <code>'transparent'</code> <code>fill_opacity</code> <code>Union[int, float]</code> <p>\u80cc\u666f\u900f\u660e\u5ea6</p> <code>1</code> <code>outline</code> <code>Union[str, tuple]</code> <p>\u8fb9\u6846\u989c\u8272</p> <code>'black'</code> <code>outline2</code> <code>Union[str, tuple]</code> <p>\u8fb9\u6846\u989c\u82722\uff08\u6e10\u53d8\uff09\uff0c\u5982\u679c\u53d6\u4e86\u8fd9\u4e2a\u503c\uff0c\u8fb9\u6846\u5c06\u4f1a\u53d8\u4e3a\u6e10\u53d8\uff0c\u4ece\u5de6\u5230\u53f3\uff0coutline\u4e3a\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272,outline2\u4e3a\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272</p> <code>'black'</code> <code>outline_opacity</code> <code>Union[int, float]</code> <p>\u8fb9\u6846\u900f\u660e\u5ea6</p> <code>1</code> <code>outline2_opacity</code> <code>Union[int, float]</code> <p>\u7b2c\u4e8c\u4e2a\u8fb9\u6846\u6e10\u53d8\u989c\u8272\u7684\u900f\u660e\u5ea6\uff0c\u5982\u679coutline\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u8fd9\u4e2a\u503c\u4e0d\u4f1a\u88ab\u7528\u5230</p> <code>1</code> <code>width</code> <code>Union[int, float]</code> <p>\u8fb9\u6846\u5bbd\u5ea6</p> <code>1</code> <p>Returns: svg\u56fe\u7247\u4fdd\u5b58\u5730\u5740</p> Source code in <code>tkflu\\button.py</code> <pre><code>def create_round_rectangle(self,\n                           x1: Union[int, float], y1: Union[int, float], x2: Union[int, float], y2: Union[int, float],\n                           r1: Union[int, float], r2: Union[int, float] = None, temppath: Union[str, None] = None,\n                           fill: Union[str, tuple]=\"transparent\", fill_opacity: Union[int, float] = 1,\n                           outline: Union[str, tuple] = \"black\", outline2: Union[str, tuple] = \"black\",\n                           outline_opacity: Union[int, float] = 1, outline2_opacity: Union[int, float] = 1,\n                           width: Union[int, float] = 1, *args, **kwargs\n                           ) -&gt; int:\n    \"\"\"\n    \u5728\u753b\u5e03\u4e0a\u521b\u5efa\u4e2a\u5706\u89d2\u77e9\u5f62\n\n    Parameters:\n      x1: \u7b2c\u4e00\u4e2ax\u8f74\u7684\u5750\u6807\n      y1: \u7b2c\u4e00\u4e2ay\u8f74\u7684\u5750\u6807\n      x2: \u7b2c\u4e8c\u4e2ax\u8f74\u7684\u5750\u6807\uff0c\u4e0ex1\u8fde\u8d77\u6765\n      y2: \u7b2c\u4e8c\u4e2ay\u8f74\u7684\u5750\u6807\uff0c\u4e0ey1\u8fde\u8d77\u6765\n      r1: \u5706\u89d2\u5927\u5c0f\n      r2: \u5706\u89d2\u5927\u5c0f\uff08y\u8f74\u65b9\u5411\uff09\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u5c06\u9ed8\u8ba4\u4e3a\u53c2\u6570r1\u7684\u503c\n      temppath: \u4e34\u65f6\u6587\u4ef6\u5730\u5740\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\uff0c\u5c31\u522b\u8bbe\u7f6e\n      fill: \u80cc\u666f\u989c\u8272\n      fill_opacity: \u80cc\u666f\u900f\u660e\u5ea6\n      outline: \u8fb9\u6846\u989c\u8272\n      outline2: \u8fb9\u6846\u989c\u82722\uff08\u6e10\u53d8\uff09\uff0c\u5982\u679c\u53d6\u4e86\u8fd9\u4e2a\u503c\uff0c\u8fb9\u6846\u5c06\u4f1a\u53d8\u4e3a\u6e10\u53d8\uff0c\u4ece\u5de6\u5230\u53f3\uff0coutline\u4e3a\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272,outline2\u4e3a\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\n      outline_opacity: \u8fb9\u6846\u900f\u660e\u5ea6\n      outline2_opacity: \u7b2c\u4e8c\u4e2a\u8fb9\u6846\u6e10\u53d8\u989c\u8272\u7684\u900f\u660e\u5ea6\uff0c\u5982\u679coutline\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u8fd9\u4e2a\u503c\u4e0d\u4f1a\u88ab\u7528\u5230\n      width: \u8fb9\u6846\u5bbd\u5ea6\n\n    Returns: svg\u56fe\u7247\u4fdd\u5b58\u5730\u5740\n    \"\"\"\n    self._img = self.svgdraw.create_roundrect(\n        x1, y1, x2, y2, r1, r2, temppath=temppath,\n        fill=fill, fill_opacity=fill_opacity,\n        outline=outline, outline2=outline2, outline_opacity=outline_opacity, outline2_opacity=outline2_opacity,\n        width=width,\n    )  # \u521b\u5efa\u4e2asvg\u5706\u89d2\u77e9\u5f62\u56fe\u7247\n    self._tkimg = self.svgdraw.create_tksvg_image(self._img)  # \u7528tksvg\u8bfb\u53d6svg\u56fe\u7247\n    return self.create_image(x1, y1, anchor=\"nw\", image=self._tkimg, *args, **kwargs)  # \u5728\u753b\u5e03\u4e0a\u521b\u5efa\u4e2a\u4ee5svg\u56fe\u7247\u4e3a\u56fe\u7247\u7684\u5143\u4ef6\n</code></pre>"},{"location":"api/tkflu.button.html#tkflu.button.FluButtonDraw","title":"<code>FluButtonDraw</code>","text":"<p>               Bases: <code>DSvgDraw</code></p> Source code in <code>tkflu\\button.py</code> <pre><code>class FluButtonDraw(DSvgDraw):\n    def create_roundrect(self,\n                         x1: Union[int, float], y1: Union[int, float], x2: Union[int, float], y2: Union[int, float],\n                         radius: Union[int, float], radiusy: Union[int, float] = None, temppath: Union[str, None] = None,\n                         fill: Union[str, tuple]=\"transparent\", fill_opacity: Union[int, float]=1,\n                         outline: Union[str, tuple] = \"black\", outline2: Union[str, tuple] = None,\n                         outline_opacity: Union[int, float] = 1, outline2_opacity: Union[int, float] = 1, width: Union[int, float] = 1,\n                         ) -&gt; str:\n        \"\"\"\n        \u7528\u4e8e\u751f\u6210svg\u5706\u89d2\u77e9\u5f62\u56fe\u7247\uff0c\u56fe\u7247\u9ed8\u8ba4\u5c06\u4f1a\u4fdd\u5b58\u81f3\u4e34\u65f6\u6587\u4ef6\u5939\u3002\n\n        Parameters:\n          x1: \u7b2c\u4e00\u4e2ax\u8f74\u7684\u5750\u6807\n          y1: \u7b2c\u4e00\u4e2ay\u8f74\u7684\u5750\u6807\n          x2: \u7b2c\u4e8c\u4e2ax\u8f74\u7684\u5750\u6807\uff0c\u4e0ex1\u8fde\u8d77\u6765\n          y2: \u7b2c\u4e8c\u4e2ay\u8f74\u7684\u5750\u6807\uff0c\u4e0ey1\u8fde\u8d77\u6765\n          radius: \u5706\u89d2\u5927\u5c0f\n          radiusy: \u5706\u89d2\u5927\u5c0f\uff08y\u8f74\u65b9\u5411\uff09\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u5c06\u9ed8\u8ba4\u4e3a\u53c2\u6570radius\u7684\u503c\n          temppath: \u4e34\u65f6\u6587\u4ef6\u5730\u5740\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\uff0c\u5c31\u522b\u8bbe\u7f6e\n          fill: \u80cc\u666f\u989c\u8272\n          fill_opacity: \u80cc\u666f\u900f\u660e\u5ea6\n          outline: \u8fb9\u6846\u989c\u8272\n          outline2: \u8fb9\u6846\u989c\u82722\uff08\u6e10\u53d8\uff09\uff0c\u5982\u679c\u53d6\u4e86\u8fd9\u4e2a\u503c\uff0c\u8fb9\u6846\u5c06\u4f1a\u53d8\u4e3a\u6e10\u53d8\uff0c\u4ece\u5de6\u5230\u53f3\uff0coutline\u4e3a\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272,outline2\u4e3a\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\n          outline_opacity: \u8fb9\u6846\u900f\u660e\u5ea6\n          outline2_opacity: \u7b2c\u4e8c\u4e2a\u8fb9\u6846\u6e10\u53d8\u989c\u8272\u7684\u900f\u660e\u5ea6\uff0c\u5982\u679coutline\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u8fd9\u4e2a\u503c\u4e0d\u4f1a\u88ab\u7528\u5230\n          width: \u8fb9\u6846\u5bbd\u5ea6\n\n        Returns:\n         svg\u56fe\u7247\u4fdd\u5b58\u5730\u5740\n        \"\"\"\n        if radiusy:\n            _rx = radius\n            _ry = radiusy\n        else:\n            _rx, _ry = radius, radius\n        drawing = self.create_drawing(x2 - x1, y2 - y1, temppath=temppath)\n        if outline2:\n            border = drawing[1].linearGradient(start=(x1, y1), end=(x1, y2), id=\"DButton.Border\",\n                                               gradientUnits=\"userSpaceOnUse\")  # \u6e10\u53d8\u8272\u914d\u7f6e\n            border.add_stop_color(\"0.9\", outline, outline_opacity)  # \u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272\u7684\u4f4d\u7f6e\u3001\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272\u3001\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272\u7684\u900f\u660e\u5ea6\n            border.add_stop_color(\"1\", outline2, outline2_opacity)  # \u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\u7684\u4f4d\u7f6e\u3001\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\u3001\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\u7684\u900f\u660e\u5ea6\n            drawing[1].defs.add(border)\n            stroke = f\"url(#{border.get_id()})\"\n            stroke_opacity = 1\n        else:\n            stroke = outline\n            stroke_opacity = outline_opacity\n        drawing[1].add(\n            drawing[1].rect(\n                (x1, y1), (x2 - x1, y2 - y1), _rx, _ry,\n                fill=fill, fill_opacity=fill_opacity,\n                stroke=stroke, stroke_width=width, stroke_opacity=stroke_opacity,\n                transform=\"translate(0.500000 0.500000)\"\n            )\n        )\n        drawing[1].save()\n        return drawing[0]\n</code></pre>"},{"location":"api/tkflu.button.html#tkflu.button.FluButtonDraw.create_roundrect","title":"<code>create_roundrect(x1, y1, x2, y2, radius, radiusy=None, temppath=None, fill='transparent', fill_opacity=1, outline='black', outline2=None, outline_opacity=1, outline2_opacity=1, width=1)</code>","text":"<p>\u7528\u4e8e\u751f\u6210svg\u5706\u89d2\u77e9\u5f62\u56fe\u7247\uff0c\u56fe\u7247\u9ed8\u8ba4\u5c06\u4f1a\u4fdd\u5b58\u81f3\u4e34\u65f6\u6587\u4ef6\u5939\u3002</p> <p>Parameters:</p> Name Type Description Default <code>x1</code> <code>Union[int, float]</code> <p>\u7b2c\u4e00\u4e2ax\u8f74\u7684\u5750\u6807</p> required <code>y1</code> <code>Union[int, float]</code> <p>\u7b2c\u4e00\u4e2ay\u8f74\u7684\u5750\u6807</p> required <code>x2</code> <code>Union[int, float]</code> <p>\u7b2c\u4e8c\u4e2ax\u8f74\u7684\u5750\u6807\uff0c\u4e0ex1\u8fde\u8d77\u6765</p> required <code>y2</code> <code>Union[int, float]</code> <p>\u7b2c\u4e8c\u4e2ay\u8f74\u7684\u5750\u6807\uff0c\u4e0ey1\u8fde\u8d77\u6765</p> required <code>radius</code> <code>Union[int, float]</code> <p>\u5706\u89d2\u5927\u5c0f</p> required <code>radiusy</code> <code>Union[int, float]</code> <p>\u5706\u89d2\u5927\u5c0f\uff08y\u8f74\u65b9\u5411\uff09\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u5c06\u9ed8\u8ba4\u4e3a\u53c2\u6570radius\u7684\u503c</p> <code>None</code> <code>temppath</code> <code>Union[str, None]</code> <p>\u4e34\u65f6\u6587\u4ef6\u5730\u5740\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\uff0c\u5c31\u522b\u8bbe\u7f6e</p> <code>None</code> <code>fill</code> <code>Union[str, tuple]</code> <p>\u80cc\u666f\u989c\u8272</p> <code>'transparent'</code> <code>fill_opacity</code> <code>Union[int, float]</code> <p>\u80cc\u666f\u900f\u660e\u5ea6</p> <code>1</code> <code>outline</code> <code>Union[str, tuple]</code> <p>\u8fb9\u6846\u989c\u8272</p> <code>'black'</code> <code>outline2</code> <code>Union[str, tuple]</code> <p>\u8fb9\u6846\u989c\u82722\uff08\u6e10\u53d8\uff09\uff0c\u5982\u679c\u53d6\u4e86\u8fd9\u4e2a\u503c\uff0c\u8fb9\u6846\u5c06\u4f1a\u53d8\u4e3a\u6e10\u53d8\uff0c\u4ece\u5de6\u5230\u53f3\uff0coutline\u4e3a\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272,outline2\u4e3a\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272</p> <code>None</code> <code>outline_opacity</code> <code>Union[int, float]</code> <p>\u8fb9\u6846\u900f\u660e\u5ea6</p> <code>1</code> <code>outline2_opacity</code> <code>Union[int, float]</code> <p>\u7b2c\u4e8c\u4e2a\u8fb9\u6846\u6e10\u53d8\u989c\u8272\u7684\u900f\u660e\u5ea6\uff0c\u5982\u679coutline\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u8fd9\u4e2a\u503c\u4e0d\u4f1a\u88ab\u7528\u5230</p> <code>1</code> <code>width</code> <code>Union[int, float]</code> <p>\u8fb9\u6846\u5bbd\u5ea6</p> <code>1</code> <p>Returns:</p> Type Description <code>str</code> <p>svg\u56fe\u7247\u4fdd\u5b58\u5730\u5740</p> Source code in <code>tkflu\\button.py</code> <pre><code>def create_roundrect(self,\n                     x1: Union[int, float], y1: Union[int, float], x2: Union[int, float], y2: Union[int, float],\n                     radius: Union[int, float], radiusy: Union[int, float] = None, temppath: Union[str, None] = None,\n                     fill: Union[str, tuple]=\"transparent\", fill_opacity: Union[int, float]=1,\n                     outline: Union[str, tuple] = \"black\", outline2: Union[str, tuple] = None,\n                     outline_opacity: Union[int, float] = 1, outline2_opacity: Union[int, float] = 1, width: Union[int, float] = 1,\n                     ) -&gt; str:\n    \"\"\"\n    \u7528\u4e8e\u751f\u6210svg\u5706\u89d2\u77e9\u5f62\u56fe\u7247\uff0c\u56fe\u7247\u9ed8\u8ba4\u5c06\u4f1a\u4fdd\u5b58\u81f3\u4e34\u65f6\u6587\u4ef6\u5939\u3002\n\n    Parameters:\n      x1: \u7b2c\u4e00\u4e2ax\u8f74\u7684\u5750\u6807\n      y1: \u7b2c\u4e00\u4e2ay\u8f74\u7684\u5750\u6807\n      x2: \u7b2c\u4e8c\u4e2ax\u8f74\u7684\u5750\u6807\uff0c\u4e0ex1\u8fde\u8d77\u6765\n      y2: \u7b2c\u4e8c\u4e2ay\u8f74\u7684\u5750\u6807\uff0c\u4e0ey1\u8fde\u8d77\u6765\n      radius: \u5706\u89d2\u5927\u5c0f\n      radiusy: \u5706\u89d2\u5927\u5c0f\uff08y\u8f74\u65b9\u5411\uff09\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u5c06\u9ed8\u8ba4\u4e3a\u53c2\u6570radius\u7684\u503c\n      temppath: \u4e34\u65f6\u6587\u4ef6\u5730\u5740\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\uff0c\u5c31\u522b\u8bbe\u7f6e\n      fill: \u80cc\u666f\u989c\u8272\n      fill_opacity: \u80cc\u666f\u900f\u660e\u5ea6\n      outline: \u8fb9\u6846\u989c\u8272\n      outline2: \u8fb9\u6846\u989c\u82722\uff08\u6e10\u53d8\uff09\uff0c\u5982\u679c\u53d6\u4e86\u8fd9\u4e2a\u503c\uff0c\u8fb9\u6846\u5c06\u4f1a\u53d8\u4e3a\u6e10\u53d8\uff0c\u4ece\u5de6\u5230\u53f3\uff0coutline\u4e3a\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272,outline2\u4e3a\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\n      outline_opacity: \u8fb9\u6846\u900f\u660e\u5ea6\n      outline2_opacity: \u7b2c\u4e8c\u4e2a\u8fb9\u6846\u6e10\u53d8\u989c\u8272\u7684\u900f\u660e\u5ea6\uff0c\u5982\u679coutline\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u8fd9\u4e2a\u503c\u4e0d\u4f1a\u88ab\u7528\u5230\n      width: \u8fb9\u6846\u5bbd\u5ea6\n\n    Returns:\n     svg\u56fe\u7247\u4fdd\u5b58\u5730\u5740\n    \"\"\"\n    if radiusy:\n        _rx = radius\n        _ry = radiusy\n    else:\n        _rx, _ry = radius, radius\n    drawing = self.create_drawing(x2 - x1, y2 - y1, temppath=temppath)\n    if outline2:\n        border = drawing[1].linearGradient(start=(x1, y1), end=(x1, y2), id=\"DButton.Border\",\n                                           gradientUnits=\"userSpaceOnUse\")  # \u6e10\u53d8\u8272\u914d\u7f6e\n        border.add_stop_color(\"0.9\", outline, outline_opacity)  # \u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272\u7684\u4f4d\u7f6e\u3001\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272\u3001\u7b2c\u4e00\u4e2a\u6e10\u53d8\u8272\u7684\u900f\u660e\u5ea6\n        border.add_stop_color(\"1\", outline2, outline2_opacity)  # \u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\u7684\u4f4d\u7f6e\u3001\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\u3001\u7b2c\u4e8c\u4e2a\u6e10\u53d8\u8272\u7684\u900f\u660e\u5ea6\n        drawing[1].defs.add(border)\n        stroke = f\"url(#{border.get_id()})\"\n        stroke_opacity = 1\n    else:\n        stroke = outline\n        stroke_opacity = outline_opacity\n    drawing[1].add(\n        drawing[1].rect(\n            (x1, y1), (x2 - x1, y2 - y1), _rx, _ry,\n            fill=fill, fill_opacity=fill_opacity,\n            stroke=stroke, stroke_width=width, stroke_opacity=stroke_opacity,\n            transform=\"translate(0.500000 0.500000)\"\n        )\n    )\n    drawing[1].save()\n    return drawing[0]\n</code></pre>"},{"location":"api/tkflu.entry.html","title":"tkflu.entry","text":""},{"location":"api/tkflu.frame.html","title":"tkflu.frame","text":""},{"location":"api/tkflu.label.html","title":"tkflu.label","text":""},{"location":"api/tkflu.html","title":"tkflu","text":"<p>Fluent\u8bbe\u8ba1\u7684tkinter\u7ec4\u4ef6\u5e93\uff08\u6a21\u677f\uff09</p> <p>\u4f5c\u8005\uff1aXiangQinxi</p>"},{"location":"api/tkflu.html#tkflu--totowang-hhh","title":"\u8d21\u732e\u8005\uff1atotowang-hhh","text":""},{"location":"blog/index.html","title":"\u535a\u5ba2","text":"<p>\u8bb0\u5f55</p>"},{"location":"blog/2024/08/15/%E7%89%88%E6%9C%AC002%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.0.2\u66f4\u65b0\uff01","text":""},{"location":"blog/2024/08/15/%E7%89%88%E6%9C%AC002%E6%9B%B4%E6%96%B0.html#_1","title":"\u65b0\u589e","text":""},{"location":"blog/2024/08/15/%E7%89%88%E6%9C%AC002%E6%9B%B4%E6%96%B0.html#fluthememanager","title":"FluThemeManager","text":"<p>\u4e3b\u9898\u7ba1\u7406\u5668\uff0c\u4fee\u6539\u6574\u4e2a\u7a97\u53e3\u6240\u6709<code>tkfluent</code>\u7ec4\u4ef6\u7684\u4e3b\u9898</p> <pre><code>manager = FluThemeManager(window=None)\nmanager.mode(\"dark\")\n</code></pre>"},{"location":"blog/2024/08/15/%E7%89%88%E6%9C%AC002%E6%9B%B4%E6%96%B0.html#_2","title":"\u521d\u59cb\u5316","text":"<ul> <li><code>window</code>\u5c5e\u6027\u6307\u5b9a\u76ee\u6807\u5bf9\u8c61</li> </ul>"},{"location":"blog/2024/08/15/%E7%89%88%E6%9C%AC002%E6%9B%B4%E6%96%B0.html#mode","title":"mode","text":"<ul> <li><code>mode</code>\u5c5e\u6027\u4fee\u6539\u4e3b\u9898\uff0c\u53ef\u4e3a\u201clight\u201d,\u201cdark\u201d</li> </ul>"},{"location":"blog/2025/06/21/%E7%89%88%E6%9C%AC007%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.0.7\u66f4\u65b0\uff01","text":""},{"location":"blog/2025/06/21/%E7%89%88%E6%9C%AC007%E6%9B%B4%E6%96%B0.html#_1","title":"\u65b0\u589e","text":""},{"location":"blog/2025/06/21/%E7%89%88%E6%9C%AC007%E6%9B%B4%E6%96%B0.html#slider","title":"Slider \u6ed1\u5757","text":"<p> Light</p> <p> Dark</p> <p>\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u5c0f\u90e8\u4ef6 -&gt; FluSlider</p> <p>\u8b66\u544a\uff01\u8fd9\u4e2a\u5c0f\u90e8\u4ef6\u505a\u5f97\u4e0d\u597d\uff0c\u8bf7\u6682\u65f6\u4e0d\u8981\u4f7f\u7528\u5b83\uff0c\u4ec5\u4e3a\u5c55\u793a\u8fdb\u5ea6\u3002</p> <pre><code>slider1 = FluSlider(master, value=0)\nslider1.pack()\n</code></pre>"},{"location":"blog/2025/06/21/%E7%89%88%E6%9C%AC007%E6%9B%B4%E6%96%B0.html#_2","title":"\u65b0\u5185\u7f6e\u4e3b\u9898\u8272","text":"<p>\u4e4b\u524d\u53ea\u6709\u4e00\u4e2a\u5185\u7f6e\u4e3b\u9898\u8272Orange, \u53ef\u4ee5\u4f7f\u7528orange_primary_color\u8bbe\u7f6e\uff0c\u73b0\u5728\u6709Red\u3001Yellow\u3001Blue\u3001Green\u3001Purple\u5185\u7f6e\u4e3b\u9898\u8272\uff0c\u5206\u522b\u53ef\u4ee5\u4f7f\u7528[colorname]_primary_color\u5207\u6362</p>"},{"location":"blog/2025/06/21/%E7%89%88%E6%9C%AC008%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.0.8\u66f4\u65b0\uff01~~","text":""},{"location":"blog/2025/06/21/%E7%89%88%E6%9C%AC008%E6%9B%B4%E6%96%B0.html#_1","title":"\u4fee\u590d","text":"<p>\u4e4b\u524d<code>FluEntry</code>\u53ca<code>FluText</code>\u6709\u70b9\"\u5386\u53f2\u9057\u7559\u95ee\u9898\"\uff0c\u7126\u70b9\u8001\u662f\u88ab\u5176Canvas\u62e6\u622a\uff0c\u800c\u4e0d\u662f\u5d4c\u5165\u7684\u8f93\u5165\u6846\u7ec4\u4ef6\uff0c\u5bfc\u81f4\u7126\u70b9\u96be\u4ee5\u805a\u7126\u5230\u8f93\u5165\u6846\u4e0a\uff0c\u70b9\u5f88\u591a\u4e0b\u624d\u80fd\u805a\u7126\u3002</p> <p>\u73b0\u5728\u5df2\u7ecf\u4fee\u590d\u597d\u4e86\uff0c\u5f3a\u884c\u62e6\u622aCanvas\u805a\u7126\uff0c\u76f4\u63a5\u6539\u4e3a\u805a\u7126\u8f93\u5165\u6846\u4e0a\u3002</p>"},{"location":"blog/2025/06/22/%E7%89%88%E6%9C%AC009%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.0.9\u66f4\u65b0\uff01","text":""},{"location":"blog/2025/06/22/%E7%89%88%E6%9C%AC009%E6%9B%B4%E6%96%B0.html#_1","title":"\u65b0\u589e","text":""},{"location":"blog/2025/06/22/%E7%89%88%E6%9C%AC009%E6%9B%B4%E6%96%B0.html#tooltip","title":"ToolTip \u5de5\u5177\u63d0\u793a","text":"<p>\u5728\u8fd9\u4e2a\u7248\u672c\u4e2d\uff0c\u6211\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u5c0f\u90e8\u4ef6 -&gt; FluToolTip </p> <p>\u4f60\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528 <pre><code>tooltip1 = FluToolTip(master, text=\"One useful tooltip\")\n</code></pre> or \u6216\u8005 <pre><code>widget.tooltip(text=\"One useful tooltip\")\n</code></pre></p>"},{"location":"blog/2025/06/22/%E7%89%88%E6%9C%AC009%E6%9B%B4%E6%96%B0.html#_2","title":"\u793a\u4f8b","text":"<pre><code>from tkflu import *\n\n\nroot = FluWindow()\n\nthememanager = FluThemeManager(root, mode=\"light\")\n\nbutton = FluButton(root, text=\"Click me\", command=lambda: print(\"Clicked\"), style=\"standard\")\nbutton.pack()\n\ntooltip = FluToolTip(button, text=\"This is a tooltip\")\n\nroot.mainloop()\n</code></pre>"},{"location":"blog/2025/06/22/%E7%89%88%E6%9C%AC010%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.1.0\u66f4\u65b0\uff01","text":""},{"location":"blog/2025/06/22/%E7%89%88%E6%9C%AC010%E6%9B%B4%E6%96%B0.html#_1","title":"\u65b0\u589e","text":""},{"location":"blog/2025/06/22/%E7%89%88%E6%9C%AC010%E6%9B%B4%E6%96%B0.html#_2","title":"\u90e8\u5206\u7ec4\u4ef6\u5b9e\u73b0\u5207\u6362\u4e3b\u9898\u65f6\u6e10\u53d8","text":"<p>\u5df2\u7ecf\u5b9e\u73b0\u4e86<code>FluMenuBar</code>\u3001<code>FluWindow</code>\u3001<code>FluToggleButton</code>\u7684\u6e10\u53d8\u6548\u679c\uff0c\u4f46\u4ece\u5b9e\u9645\u6548\u679c\u4e0a\u6765\u770b\uff0c\u8fd8\u6709\u4e0d\u8db3\u3002\u95f4\u63a5\u5bfc\u81f4\u90e8\u5206\u7ec4\u4ef6\u80cc\u666f\u5728\u5207\u6362\u540e\u672a\u8f6c\u53d8\u56de\u6765\u3002</p> <p>\u5b9e\u73b0\u6e10\u53d8\u6548\u679c\u4efb\u91cd\u800c\u9053\u8fdc\u3002</p>"},{"location":"blog/2025/06/22/%E7%89%88%E6%9C%AC010%E6%9B%B4%E6%96%B0.html#_3","title":"\u4fee\u590d","text":"<p>\u518d\u4e4b\u524d\u6211\u81ea\u5df1\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u5728\u67d0\u4e9b\u7ec4\u4ef6\u4e2d\u7559\u4e0b\u4e86\u81ea\u5df1\u7684<code>print()</code>\u6d4b\u8bd5\u75d5\u8ff9\uff0c\u5bfc\u81f4\u4f7f\u7528\u65f6\uff0c\u4f1a\u6253\u5370\u51fa\u65e0\u7528\u7684\u6570\u636e\u3002</p>"},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC011%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.1.1\u66f4\u65b0\uff01","text":""},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC011%E6%9B%B4%E6%96%B0.html#_1","title":"\u65b0\u589e","text":""},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC011%E6%9B%B4%E6%96%B0.html#_2","title":"\u90e8\u5206\u7ec4\u4ef6\u5b9e\u73b0\u5207\u6362\u4e3b\u9898\u65f6\u6e10\u53d8","text":"<p> \u793a\u4f8b1.py<pre><code>from tkflu import *\n\nroot = FluWindow()\n\ntheme_manager = FluThemeManager(root)\n\nbtn = FluButton(root, text=\"Button\", mode=\"light\", style=\"standard\", command=lambda: theme_manager.toggle())\nbtn.pack(padx=20, pady=20, fill=\"both\", expand=\"yes\")\n\nroot.mainloop()\n</code></pre></p> <p> \u793a\u4f8b2.py<pre><code>from tkflu import *\n\nroot = FluWindow()\n\ntheme_manager = FluThemeManager(root)\n\nframe = FluFrame(root, mode=\"light\", style=\"standard\")\n\nbtn = FluButton(frame, text=\"Button\", mode=\"light\", style=\"standard\", command=lambda: theme_manager.toggle())\nbtn.pack(padx=20, pady=20, fill=\"both\", expand=\"yes\")\n\nframe.pack(padx=20, pady=20, fill=\"both\", expand=\"yes\")\n\nroot.mainloop()\n</code></pre></p> <p>\u589e\u8fdb\u591a\u5b9e\u73b0\u4e86<code>FluButton</code>\u3001<code>FluFrame(\u4e0d\u592a\u5b8c\u5584)</code>\u7684\u6e10\u53d8\u6548\u679c</p> <p>\u4e0d\u4e45\u5c06\u4f1a\u5b9e\u73b0<code>FluFrame</code>\u8fb9\u6846\u6e10\u53d8\uff0c\u73b0\u5728\u53ea\u662f\u5b9e\u73b0\u4e86\u5bb9\u5668\u7ec4\u4ef6\u7684\u6e10\u53d8\u6548\u679c\uff0c\u800c\u8fb9\u6846\u8fd8\u672a\u5236\u4f5c\uff0c\u5bfc\u81f4\u770b\u7684\u4e0d\u662f\u592a\u6d41\u7545</p>"},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC011%E6%9B%B4%E6%96%B0.html#_3","title":"\u4f18\u5316","text":"\u793a\u4f8b3.py<pre><code>from tkflu import *\n\nset_animation_steps(20)\nset_animation_step_time(10)\n\nroot = FluWindow()\n\ntheme_manager = FluThemeManager(root)\n\nmenubar = FluMenuBar(root)\nfor i in range(5):\n    menubar.add_command(label=f\"Item{i+1}\")\nmenubar.show()\n\nbtn = FluButton(root, text=\"Button\", mode=\"light\", style=\"standard\", command=lambda: theme_manager.toggle())\nbtn.pack(padx=20, pady=20, fill=\"both\", expand=\"yes\")\n\nroot.mainloop()\n</code></pre> <p>\u4f18\u5316\u4e86\u4e0b\u90e8\u5206\u7ec4\u4ef6\u5982<code>FluMenu</code>\u7684\u5207\u6362\u4e3b\u9898\u65f6\u7684\u5237\u65b0\u91cd\u7ed8\u95ee\u9898\uff0c\u4e0d\u4f1a\u5728\u91cd\u7ed8\u540e\u51fa\u73b0\u4e00\u4e9b\u5947\u602a\u7684\u95ee\u9898</p> <p><code>FluMenuBar</code>\u901a\u8fc7<code>add_command</code>\u521b\u5efa\u7684\u9879\u5b9e\u9645\u4e0a\u662f<code>FluButton</code>\uff0c\u56e0\u6b64\u672a\u5217\u5165\u589e\u6dfb\u6e10\u53d8\u5217\u8868</p> <p>\u4e0d\u8fc7\u4ece\u5b9e\u9645\u4e0a\u770b\uff0c\u9ad8\u901f\u5207\u6362\u4e3b\u9898\u4e5f\u4f1a\u5bfc\u81f4\u90e8\u5206\u7ec4\u4ef6\u672a\u6e32\u67d3</p>"},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC012%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.1.2\u66f4\u65b0\uff01","text":""},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC012%E6%9B%B4%E6%96%B0.html#_1","title":"\u65b0\u589e","text":""},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC012%E6%9B%B4%E6%96%B0.html#_2","title":"\u90e8\u5206\u7ec4\u4ef6\u5b9e\u73b0\u5207\u6362\u4e3b\u9898\u65f6\u6e10\u53d8","text":"<p><code>FluLabel</code>\u5b9e\u73b0\u4e86\u6e10\u53d8\u6548\u679c</p> <p> \u793a\u4f8b1.py<pre><code>from tkflu import *\n\nset_animation_steps(20)\nset_animation_step_time(20)\n\nroot = FluWindow()\n\ntheme_manager = FluThemeManager(root)\n\nbutton = FluButton(root, text=\"Button\", mode=\"light\", style=\"standard\", command=lambda: theme_manager.toggle())\nbutton.pack(padx=20, pady=20, fill=\"both\", expand=\"yes\")\n\nlabel = FluLabel(root, text=\"Label\", mode=\"light\")\nlabel.pack(padx=20, pady=20, fill=\"both\", expand=\"yes\")\n\nroot.mainloop()\n</code></pre></p>"},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC012%E6%9B%B4%E6%96%B0.html#_3","title":"\u53ef\u8bbe\u7f6e\u6e10\u53d8\u52a8\u753b\u7684\u5e27\u6570\u548c\u5e27\u7387","text":"<pre><code>set_animation_steps()  # \u52a8\u753b\u5e27\u6570\nset_animation_step_time()  # \u52a8\u753b\u64ad\u653e\u4e00\u5e27\u6240\u9700\u7684\u6beb\u79d2\u79d2\u6570\n</code></pre>"},{"location":"blog/2025/06/23/%E7%89%88%E6%9C%AC012%E6%9B%B4%E6%96%B0.html#_4","title":"\u4fee\u590d","text":"<p>1.\u4fee\u590d\u4e86<code>FluToplevel</code>\u4e3b\u9898\u66f4\u6539\u65f6\uff0c\u5b50\u7ec4\u4ef6\u4e0d\u4f1a\u6267\u884c<code>theme()</code>\u65b9\u6cd5\u7684\u9519\u8bef\u3002</p> <p>2.\u4fee\u590d\u4e86<code>FluToggleButton</code>\u6e10\u53d8\u52a8\u753b\u4e0d\u53ef\u88ab<code>set_animation_steps()</code>\u4e0e<code>set_animation_step_time()</code>\u4fee\u6539\u7684\u95ee\u9898</p>"},{"location":"blog/2025/06/24/%E7%89%88%E6%9C%AC013%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.1.3\u66f4\u65b0\uff01","text":"<p>\u672c\u6b21\u4e3b\u8981\u4e3a\u4f18\u5316\u3001\u4fee\u590d\u4e3a\u4e3b</p>"},{"location":"blog/2025/06/24/%E7%89%88%E6%9C%AC013%E6%9B%B4%E6%96%B0.html#_1","title":"\u65b0\u589e","text":"<ol> <li>\u6587\u6863\u65b0\u6dfbapi\u6587\u6863</li> <li>\u6587\u6863\u65b0\u6dfb<code>\u4f5c\u8005\u4e3b\u9875</code>\u3001<code>tkadwite</code>\u5bfc\u822a</li> </ol>"},{"location":"blog/2025/06/24/%E7%89%88%E6%9C%AC013%E6%9B%B4%E6%96%B0.html#_2","title":"\u4f18\u5316","text":"<p>\u4f18\u5316\u5224\u65ad\u90e8\u5206\u7ec4\u4ef6\u4e3b\u9898\u3001\u6837\u5f0f\u7684\u65b9\u6cd5</p>"},{"location":"blog/2025/06/24/%E7%89%88%E6%9C%AC013%E6%9B%B4%E6%96%B0.html#_3","title":"\u4fee\u590d","text":"<ol> <li>\u8bbe\u7f6e\u4f9d\u8d56numpy\u7248\u672c\u65f6\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u53ea\u9700\u7528\u57fa\u672c\u7684array\u65b9\u6cd5\uff0c\u6240\u4ee5\u80fd\u517c\u5bb9\u5927\u90e8\u5206\u7248\u672c\uff0c\u800cnumpy2.x\u591a\u7248\u672c\u53ea\u652f\u6301python3.11\u53ca\u4ee5\u4e0a\uff0c\u5bfc\u81f4\u524d\u9762\u7684\u7248\u672c\u4e0d\u80fd\u5b89\u88c5</li> <li>\u66f4\u6539tkdeft\u4f9d\u8d56\uff0c\u53ea\u80fd\u4e3a0.0.9\u3002</li> </ol>"},{"location":"blog/2025/06/26/%E7%89%88%E6%9C%AC014%E6%9B%B4%E6%96%B0.html","title":"\u7248\u672c0.1.4\u66f4\u65b0\uff01","text":""},{"location":"blog/2025/06/26/%E7%89%88%E6%9C%AC014%E6%9B%B4%E6%96%B0.html#_1","title":"\u65b0\u589e","text":"<p><code>FluSlider</code>\u6ed1\u5757\u5df2\u7ecf\u5236\u4f5c\u7684\u8f83\u4e3a\u5b8c\u5584</p> <p>\u4ecd\u6709\u5730\u65b9\u9700\u8981\u5b8c\u5584\uff0c\u5982\u6309\u4f4f\u6ed1\u5757\u65f6\uff0c\u6ed1\u5757\u5e94\u4e0e\u9f20\u6807\u76f8\u5bf9\u8fd0\u52a8\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u79fb\u52a8\u5230\u9f20\u6807\u4f4d\u7f6e\u3002\u4f46\u8fd9\u662f\u4e00\u4e9b\u65e0\u5916\u4e4e\u7684\u95ee\u9898\uff0c\u53ef\u7a0d\u540e\u89e3\u51b3\u3002</p> <p></p> <pre><code>from tkinter import Tk, Frame\nfrom tkflu import *\n\nroot = FluWindow(mode=\"dark\")\nroot.geometry(\"300x50\")\n\nslider = FluSlider(value=50, mode=\"dark\")\nslider.pack(fill=\"x\", padx=10, pady=10)\n\nroot.mainloop()\n</code></pre> <p></p> <pre><code>from tkinter import Tk, Frame\nfrom tkflu import *\n\nroot = FluWindow()\nroot.geometry(\"300x50\")\n\nslider = FluSlider(value=50)\nslider.pack(fill=\"x\", padx=10, pady=10)\n\nroot.mainloop()\n</code></pre>"},{"location":"blog/2025/06/26/%E7%89%88%E6%9C%AC014%E6%9B%B4%E6%96%B0.html#_2","title":"\u4fee\u6539\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\uff0c\u5f53\u524d\u6570\u503c","text":"<p>\u54b3\u54b3\uff0c\u586b\u53cd\u4e86\uff0c\u4f46\u95ee\u9898\u4e0d\u5927\uff0c\u80fd\u8bfb\u53d6\u6570\u503c\u5c31\u53ef <pre><code>slider.dconfigure(max=-100, min=100, value=0)\n</code></pre></p> <p></p> <pre><code>from tkinter import Tk, Frame\nfrom tkflu import *\n\nroot = FluWindow(mode=\"dark\")\nroot.geometry(\"300x100\")\n\nslider = FluSlider(value=50, mode=\"dark\")\nslider.dconfigure(max=-100, min=100, value=0)\nslider.pack(fill=\"x\", padx=10, pady=10)\n\nbutton = FluButton(text=\"Check Value\", mode=\"dark\", command=lambda: print(slider.dcget(\"value\")))\nbutton.pack(fill=\"x\", padx=10, pady=10)\n\nroot.mainloop()\n</code></pre>"},{"location":"blog/2025/06/26/%E7%89%88%E6%9C%AC014%E6%9B%B4%E6%96%B0.html#_3","title":"\u4fee\u590d","text":"<p>\u66f4\u6539tkdeft\u4f9d\u8d56\uff0c\u53ea\u80fd\u4e3a0.1.0\u3002</p>"},{"location":"getstarted/download.html","title":"\u5b89\u88c5","text":"<p>\u5e93\u540d\u53eb\u505a<code>tkfluent</code>\uff0c\u4f46\u5bfc\u5165\u65f6\u8981\u4f7f\u7528<code>tkflu</code>\u8fd9\u7f29\u51cf\u540d\u79f0</p> <p>\u7528PIP\u4e0b\u8f7d</p> <p><pre><code>pip install tkfluent\n</code></pre> \u4e2d\u56fd\u56fd\u5185\u955c\u50cf\u6e90 <pre><code>pip install tkfluent -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre></p> <p>\u4eceGithub\u4e0b\u8f7d</p> <p>\u4eceReleases\u4e0b\u8f7d<code>tkfluent-x.x.x-py3-none-any.whl</code></p> <p>\u6ce8\u610f\u66ff\u6362\u672c\u5730\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d</p> <pre><code>pip install tkfluent-x.x.x-py3-none-any.whl \n</code></pre> <p>\u514b\u9686\u9879\u76ee\u5e76\u7f16\u8bd1\u5b89\u88c5</p> <p>\u7531\u4e8e\u672c\u9879\u76ee\u662f\u4f7f\u7528<code>poetry</code>\u6253\u5305\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5b89\u88c5<code>poetry</code>\u8fdb\u884c\u7f16\u8bd1 <pre><code>pip install poetry -U\n</code></pre></p> <p>\u4e2d\u56fd\u56fd\u5185\u955c\u50cf\u6e90 <pre><code>pip install poetry -U -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> \u514b\u9686\u9879\u76ee\u81f3\u672c\u5730 <pre><code>git clone https://github.com/XiangQinxi/tkfluent.git\n</code></pre> \u7f16\u8bd1\u5e76\u5b89\u88c5 <pre><code>cd tkfluent\npoetry install\npoetry build\npip install dist/tkfluent-x.x.x-py3-none-any.whl\n</code></pre></p>"},{"location":"getstarted/easytouse.html","title":"\u7b80\u5355\u4f7f\u7528","text":"<p>\u5982\u679c\u4f60\u6709\u4e00\u5b9a\u7684<code>tkinter</code>\u7f16\u7801\u57fa\u7840\uff0c\u90a3\u4f60\u4e0a\u624b\u4f1a\u6bd4\u8f83\u5bb9\u6613\u3002</p> <p>\u5176\u5b9e\u8bed\u6cd5\u90fd\u5dee\u4e0d\u592a\u591a\uff0c\u5982\u4e0b\u793a\u4f8b</p> TkinterTkFluent <pre><code>import tkinter as tk\n\nroot = tk.Tk()\n\nbutton = tk.Button(text=\"Button\")\nbutton.pack()    \n\nroot.mainloop()\n</code></pre> <pre><code>import tkflu\n\nroot = tkflu.FluWindow()\n\nbutton = tkflu.FluButton(text=\"Button\")\nbutton.pack()    \n\nroot.mainloop()\n</code></pre> <p>\u53ef\u4ee5\u8fd0\u884c\u793a\u4f8b\u770b\u770b\u6240\u6709\u7ec4\u4ef6\u957f\u4ec0\u4e48\u6837 <pre><code>python -m tkflu\n</code></pre></p> <p>\u793a\u4f8b\u63d0\u793a</p> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u91cc\uff0c\u6309\u4e0b<code>Toggle Theme</code>\u6309\u94ae\uff0c\u53ef\u4ee5\u5207\u6362\u4e3b\u9898\uff08\u8bf7\u4e0d\u8981\u9ad8\u901f\u70b9\u51fb\uff0c\u5207\u6362\u4e3b\u9898\u65f6\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u8981\u6e32\u67d3\uff0c\u4f1a\u6709\u5361\u987f\uff0c\u5bfc\u81f4\u90e8\u5206\u7ec4\u4ef6\u4e3b\u9898\u6ca1\u6709\u6e32\u67d3\u51fa\u6765\uff09</p> <p>\u6309\u4e0b<code>Toggle State</code>\u6309\u94ae\uff0c\u53ef\u4ee5\u4f7f<code>FluButton</code>\u3001<code>FluButton(Accent)</code>\u3001<code>FluEntry</code>\u7ec4\u4ef6\u5931\u6548/\u6062\u590d\u6b63\u5e38</p> <p>\u6548\u679c\u5c55\u793a</p> <p></p> <p></p>"},{"location":"getstarted/easytouse.html#_2","title":"\u4e0d\u540c\u70b9\u987b\u77e5","text":"<p><code>tkfluent</code>\u6bd4<code>tkinter</code>\u591a\u4e86<code>dconfig</code>\u3001<code>dconfigure</code>\u3001<code>dcget</code>\u3001<code>attributes</code>\u7b49\u5c5e\u6027\u65b9\u6cd5\u3001\u53c2\u6570\u3002 \u8fd9\u5f97\u4e8e\u7ee7\u627f\u4e86<code>tkdeft.DObject</code>\u3002</p> <p>tkdeft/object.py<pre><code>class DObject(object):\n    \"\"\"\n    \u57fa\u7840\u5bf9\u8c61\n    \"\"\"\n\n    from easydict import EasyDict\n\n    attributes = EasyDict(\n        {\n            \"class\": \"DObject\"\n        }\n    )\n\n    def dconfigure(self, **kwargs):\n        for attribute in self.attributes:\n            if attribute in kwargs:\n                self.attributes[attribute] = kwargs.pop(attribute)\n\n    dconfig = dconfigure\n\n    def dcget(self, key):\n        if key in self.attributes:\n            return self.attributes[key]\n        else:\n            return None\n</code></pre> \u7531\u4e8e\u5728\u5b9e\u9645\u7ee7\u627f\u8fc7\u7a0b\u4e2d\uff0c<code>tkinter</code>\u4e2d<code>config</code>\u7684\u5c5e\u6027\u4f1a\u88ab\u9876\u66ff\u6389\uff0c\u4e3a\u4e86\u9632\u6b62\u4ee5\u540e\u9047\u5230\u4ec0\u4e48\u9700\u8981\u7684\uff0c\u4f46\u67d0\u4e2a\u5c5e\u6027\u65e0\u6cd5\u88ab\u8bbe\u7f6e\uff0c\u5c31\u5355\u72ec\u6709\u8bbe\u7f6e\u4e86\u5c5e\u6027\u65b9\u6cd5\u3002</p> TkinterTkFluent <pre><code>widget.config(attribute=value)\nwidget.configure(attribute=value)\n</code></pre> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6<code>tkinter</code>\u7684\u5c5e\u6027\u7684\u5bf9\u5e94\u503c\uff0c\u4e0e<code>tkfluent</code>\u7279\u6709\u5c5e\u6027\u4e0d\u8fde\u901a <pre><code>widget.cget(\"attribute_name\")\n</code></pre></p> <p>\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u662f\u4e00\u6837\u7684\uff0c\u7528\u4e8e\u8bbe\u7f6e\u72ec\u5c5e\u4e8e<code>tkfluent\u7ec4\u4ef6</code>\u7684\u5c5e\u6027 <pre><code>widget.dconfig(attribute=value)\nwidget.dconfigure(attribute=value)\n</code></pre></p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u72ec\u5c5e\u4e8e<code>tkfluent\u7ec4\u4ef6</code>\u7684\u5c5e\u6027\u7684\u5bf9\u5e94\u503c <pre><code>widget.dcget(\"attribute_name\")\n</code></pre></p>"},{"location":"getstarted/the_1st_app.html","title":"\u7b2c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f","text":"<p>\u603b\u6240\u5468\u77e5\uff0c\u5b9e\u8df5\u4e5f\u662f\u5b66\u4e60\u7684\u4e00\u79cd\uff0c\u53ef\u4ee5\u63d0\u5347\u7684\u66f4\u5feb\uff0c\u6bd4\u5355\u5355\u770b\u51e0\u672c\u4e66\u5feb\u591a\u4e86</p> <p>\u5148\u770b\u6548\u679c </p>"},{"location":"getstarted/the_1st_app.html#_2","title":"\u7a97\u53e3\u521d\u6b65\u8bbe\u7f6e","text":"<pre><code>from tkflu import *\n\nroot = FluWindow()\nroot.title(\"tkfluent designer\")\nroot.geometry(\"500x300\")\n\nroot.mainloop()\n</code></pre>"},{"location":"getstarted/the_1st_app.html#title","title":"title","text":"<p>\u719f\u6089<code>tkinter</code>\u7684\u90fd\u77e5\u9053\uff0c<code>title</code>\u65b9\u6cd5\u4e2d\u6587\u76f4\u8bd1\u8fc7\u6765\u5c31\u662f\u6807\u9898\u7684\u610f\u601d\uff0c\u91cc\u9762\u8f93\u5165\u53c2\u6570\u4fbf\u53ef\u4ee5\u8bbe\u7f6e\u7a97\u53e3\u6807\u9898\uff0c\u4f46\u5982\u679c\u6ca1\u7ed9\u51fa\u503c\uff0c\u5c06\u4f1a\u8fd4\u56de\u6807\u9898\u3002</p>"},{"location":"getstarted/the_1st_app.html#geometry","title":"geometry","text":"<p><code>geometry</code>\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e\u7a97\u53e3\u7684\u5927\u5c0f\u3001\u4f4d\u7f6e\uff0c\u4f46\u4e0d\u8f93\u5165\u4e0d\u4f1a\u6709\u4efb\u4f55\u8fd4\u56de\u3002</p> <p>\u5982\u679c\u8f93\u5165<code>\"500x500\"</code>\u5219\u4f1a\u5c06\u7a97\u53e3\u8bbe\u7f6e\u957f500\u50cf\u7d20\uff0c\u5bbd500\u50cf\u7d20\u3002\u5982\u679c\u53ea\u60f3\u8bbe\u7f6e\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u8fd9\u6837<code>\"+500+500\"</code>\uff0c\u5f00\u5934\u52a0\u4e2a<code>+</code>\u53f7\uff0c\u540e\u9762\u8ddf\u4e24\u4e2a\u6570\u5b57\uff0c\u7b2c\u4e00\u4e2a\u6570\u5b57\u662fX\u8f74\u7684\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u662fY\u8f74\u7684\u4f4d\u7f6e\u3002 \u5f53\u7136\u4e24\u4e2a\u53ef\u4ee5\u5408\u8d77\u6765\uff0c\u65e2\u8bbe\u7f6e\u4f4d\u7f6e\uff0c\u53c8\u8bbe\u7f6e\u5927\u5c0f\u3002\u53ea\u9700\u5c06\u5b83\u4eec\u62fc\u8d77\u6765\uff0c\u4f46\u5927\u5c0f\u5728\u524d\uff0c\u4f4d\u7f6e\u5728\u540e\uff0c<code>500x500+500+500</code>\u7c7b\u4f3c\u8fd9\u79cd</p>"},{"location":"getstarted/the_1st_app.html#_3","title":"\u8bbe\u7f6e\u83dc\u5355\u680f","text":"<p><pre><code>menubar = FluMenuBar(root)\nmenubar.show()  # \u5b9e\u9645\u4e3amenubar.pack(fill=\"x\") \u53ea\u662f\u7b80\u5316\u4e86\u7f62\u4e86\n</code></pre> </p> <p>\u53ef\u89c1\u83dc\u5355\u680f\u51fa\u73b0\u5728\u4e0a\u65b9\uff0c\u53ea\u4e0d\u8fc7\u6709\u70b9\u4e0d\u592a\u660e\u663e</p> <p>\u73b0\u5728\u6765\u52a0\u70b9\u4e1c\u897f <pre><code>menubar.add_command(label=\"File\", style=\"standard\", width=40, command=lambda: print(\"File -&gt; Clicked\"))\n</code></pre> \u4e0e<code>tkinter.Menu</code>\u521b\u5efa\u4e2a\u83dc\u5355\u9009\u9879\u5927\u5dee\u4e0d\u5dee</p> <p></p> <p>\u70b9\u51fb\u540e <pre><code>\u8f93\u51fa\uff1aFile -&gt; Clicked\n</code></pre></p> <p>\u4e0d\u8fc7\u5417\uff0c\u4e0d\u4fee\u6539\u6837\u5f0f\u7684\u8bdd\uff0c\u672c\u4e3a<code>\"menu\"</code>\u6837\u5f0f\u3002\u83dc\u5355\u680f\u7684\u5404\u4e2a\u9009\u9879\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e2a<code>FluButton</code>\uff0c\u4e3a\u4e86\u8ba9\u5b83\u88ab\u5d4c\u5165\u83dc\u5355\u680f\u65f6\u66f4\u7b26\u5408\u539f\u7248<code>sunvalley</code>\u7684\u8bbe\u8ba1\u3002</p> <p>\u5b9e\u73b0\u591a\u7ea7\u83dc\u5355\u5c31\u6709\u70b9\u590d\u6742\u4e86</p> <p>\u521b\u5efa\u4e00\u4e2a<code>FluMenu</code>\u5bf9\u8c61\uff0c\u518d\u7528<code>add_cascade</code>\u65b9\u6cd5\u5c06<code>FluMenu</code>\u5bf9\u8c61\u5d4c\u5165\u83dc\u5355\u680f\u3002</p> <p>\u8fd9\u91cc\u6765\u505a\u4e2a\u5b9e\u73b0\u5207\u6362\u6df1\u6d45\u4e3b\u9898\u7684\u83dc\u5355 <pre><code>theme_manager = FluThemeManager(root)\n</code></pre></p> <pre><code>menu1 = FluMenu()\nmenu1.geometry(\"90x90\")\nmenu1.add_command(label=\"Light\", command=lambda: theme_manager.mode(\"light\"))\nmenu1.add_command(label=\"Dark\", command=lambda: theme_manager.mode(\"dark\"))\n</code></pre> <p><pre><code>menubar.add_cascade(label=\"Theme Mode\", style=\"standard\", width=100, menu=menu1)\n</code></pre> \u73b0\u5728\u5c31\u88ab\u5d4c\u5165\u8fdb\u53bb\u4e86</p> <p></p> <p>\u6700\u540e\u518d\u52a0\u4e2a<code>\u5173\u4e8e</code>\u7684\u83dc\u5355</p> <pre><code>def func1():\n    messagebox = FluToplevel()\n    messagebox.geometry(\"300x200\")\n\n    label = FluLabel(messagebox, text=\"This is a example for tkfluent!\", width=160, height=32)\n    label.pack(anchor=\"center\")\n\nmenubar.add_command(label=\"About\", style=\"standard\", width=40, command=lambda: func1())\n</code></pre> <p>\u8fd8\u6709\u4e00\u70b9\uff0c\u5982\u679c\u60f3\u8ba9\u6e10\u53d8\u6548\u679c\u66f4\u660e\u663e\u3001\u6162\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528<code>set_animation_steps()</code>\u548c<code>set_animation_step_time()</code>\u65b9\u6cd5</p> <pre><code>set_animation_steps(10)\nset_animation_step_time(10)\n</code></pre>"},{"location":"getstarted/the_1st_app.html#_4","title":"\u5b8c\u6574\u793a\u4f8b","text":"<pre><code>from tkflu import *\n\nset_animation_steps(10)\nset_animation_step_time(10)\n\nroot = FluWindow()\nroot.title(\"tkfluent designer\")\nroot.geometry(\"500x300\")\n\ntheme_manager = FluThemeManager(root)\n\nmenubar = FluMenuBar(root)\n\nmenu1 = FluMenu()\nmenu1.geometry(\"90x90\")\nmenu1.add_command(label=\"Light\", command=lambda: theme_manager.mode(\"light\"))\nmenu1.add_command(label=\"Dark\", command=lambda: theme_manager.mode(\"dark\"))\n\ndef func1():\n    messagebox = FluToplevel()\n    messagebox.geometry(\"300x200\")\n\n    label = FluLabel(messagebox, text=\"This is a example for tkfluent!\", width=160, height=32)\n    label.pack(anchor=\"center\")\n\nmenubar.add_command(label=\"File\", style=\"standard\", width=40, command=lambda: print(\"File -&gt; Clicked\"))\nmenubar.add_cascade(label=\"Theme Mode\", style=\"standard\", width=100, menu=menu1)\nmenubar.add_command(label=\"About\", style=\"standard\", width=40, command=lambda: func1())\n\nmenubar.show()\n\n\nroot.mainloop()\n</code></pre>"},{"location":"home/about.html","title":"\u5173\u4e8etkfluent","text":""},{"location":"home/about.html#_1","title":"\u524d\u8a00","text":"<p>\u8fd9\u4e2a\u9879\u76ee\u9996\u6b21\u542f\u7528\uff0c\u5927\u6982\u5728<code>2024\u5e741\u6708\u591a</code>\uff0c\u4f46\u7531\u4e8e\u6211\u5f53\u65f6\u662f\u4e00\u4f4d<code>\u521d\u4e2d\u751f</code>\uff0c\u8fd8\u6709\u7e41\u91cd\u7684\u5b66\u4e1a\u8981\u5f04\uff0c\u4fbf\u6401\u7f6e\u4e0b\u6765\u3002\u5076\u5c14\u66f4\u65b0\u51e0\u6b21\u3002</p> <p></p> <p>\u5982\u4eca\u6211\u7ec8\u4e8e\u662f\u4e2d\u8003\u5b8c\uff0c\u6bd5\u4e1a\u4e86\uff0c\u6691\u5047\u8fd9\u6bb5\u65f6\u95f4\u6709\u5927\u628a\u65f6\u95f4\u6765\u7f16\u7a0b\u3002</p>"},{"location":"home/about.html#_2","title":"\u8bbe\u8ba1","text":""},{"location":"home/about.html#tkfluent_1","title":"tkfluent\u7684\u539f\u7406","text":"<p><code>tksvg</code>\u53ef\u4ee5\u5728<code>tkinter</code>\u663e\u793a<code>svg</code>\u56fe\u7247\uff0c\u7136\u540e\u6709\u4e86\u4e2a\u7075\u611f\uff0c\u751f\u6210\u4e2a<code>svg</code>\u56fe\u7247\uff0c\u7136\u540e\u7528<code>tksvg</code>\u5c06\u5176\u663e\u793a\u5728\u753b\u5e03\u4e0a\u3002</p> <p>\u5176\u5b9e\u65e9\u5728\u51e0\u5e74\u524d\uff0c\u5927\u6982<code>2023\u5e74</code>\u65f6\u5c31\u6709\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u4f46\u662f\u7531\u4e8e\u4e0d\u592a\u719f\u6089<code>Python</code>\u3001<code>tkinter</code>\uff0c\u5bfc\u81f4<code>svg</code>\u8fdf\u8fdf\u4e5f\u65e0\u6cd5\u663e\u793a\u5230\u7a97\u53e3\u4e0a\uff0c\u540e\u9762\u5c31\u653e\u5f03\u4e86\u3002 \u73b0\u5728\u624d\u53d1\u73b0\u539f\u6765\u662f\u9700\u8981\u5b9e\u4f8b\u5316<code>SvgImage</code>\u624d\u80fd\u8ba9\u5b83\u4e0d\u88ab\u9500\u6bc1\u3002</p> <pre><code>graph LR\n  A[SvgWrite \u751f\u6210SVG\u56fe\u7247] --&gt; B[\u4fdd\u5b58\u81f3\u4e34\u65f6\u6587\u4ef6\u5939];\n  B --&gt; C[tksvg.SvgImage \u8bfb\u53d6\u8be5SVG\u56fe\u7247];\n  C --&gt; D[tkinter.Canvas.create_image \u663e\u793a\u8be5\u56fe\u7247]; </code></pre> <p>\u6bd4\u5982FluButton</p> <p>\u56e0\u4e3a<code>tkinter</code>\u7684<code>Canvas</code>\u7ec4\u4ef6\u65e0\u6cd5\u5b9e\u73b0\u5706\u89d2\u77e9\u5f62\uff0c\u6240\u4ee5\u53ea\u80fd\u7528<code>svg</code>\u56fe\u7247\u5b9e\u73b0\u3002svg\u7ed8\u5236\u6587\u672c\u6709\u70b9\u590d\u6742\uff0c\u6240\u4ee5\u6211\u5e72\u8106\u7528<code>Canvas.create_text</code>\u6765\u7ed8\u5236\u6587\u672c\u3002</p> <pre><code>graph LR\n    A[SvgWrite \u7ed8\u5236\u5706\u89d2\u77e9\u5f62\u5e76\u4fdd\u6301\u7ed8\u5236\u4e34\u65f6\u6587\u4ef6\u5939] --&gt; B[tksvg.SvgImage \u5728\u4e34\u65f6\u6587\u4ef6\u5939\u8bfb\u53d6\u8be5SVG\u56fe\u7247];\n    B --&gt; C[tkinter.Canvas.create_image \u663e\u793a\u8be5\u56fe\u7247];\n    C --&gt; D[tkinter.Canvas.create_text \u7ed8\u5236\u6587\u5b57]; </code></pre>"},{"location":"home/about.html#tkadwite","title":"\u4f5c\u8005\u7684\u524d\u9879\u76eetkadwite","text":"<p>\u6211\u66fe\u7ecf\u505a\u8fc7<code>tkadwite</code>\u9879\u76ee\uff0c\u8fd9\u4e5f\u662f\u4e2a<code>tkinter</code>\u754c\u9762\u6269\u5c55\u5e93\uff0c\u4f46\u505a\u5230\u540e\u9762\u6709\u70b9\u96be\u53d7\uff0c\u56e0\u4e3a\u91cc\u9762\u7684\u7ec4\u4ef6\u90fd\u662f\u7528<code>tkinter.Canvas</code>\u6765\u7ed8\u5236\u7684\uff0c\u660e\u663e\u952f\u9f7f\u8fd9\u4e2a\u539f\u56e0\u4e00\u76f4\u90fd\u5728\uff0c\u5706\u89d2\u77e9\u5f62\u7684\u6e10\u53d8\u3001\u9634\u5f71\u90fd\u662f\u5ea7\u5ea7\u5927\u5c71\uff0c\u96be\u4ee5\u589e\u8fdb\u753b\u9762\u6548\u679c\u3002</p> <p></p> <p>\u4e0d\u8fc7\u4e0b\u9762\u8fd9\u79cd\u56fe\u7247\u7684\u6548\u679c\uff0c\u8fd9\u4e2a\u7248\u672c\u81f3\u4eca\u4e5f\u6ca1\u53d1\u5e03\u51fa\u6765 </p>"},{"location":"tutorial/change_theme_color.html","title":"\u4fee\u6539\u4e3b\u9898\u8272","text":""},{"location":"tutorial/change_theme_color.html#_2","title":"\u4e3b\u9898\u8272","text":""},{"location":"tutorial/change_theme_color.html#_3","title":"\u7ea2\u8272","text":""},{"location":"tutorial/change_theme_color.html#_4","title":"\u84dd\u8272","text":""},{"location":"tutorial/change_theme_color.html#_5","title":"\u4fee\u6539\u4e3b\u9898\u8272","text":"<p>\u4fee\u6539\u4e3b\u9898\u8272\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5</p> <p>\u5bfc\u5165\u65b9\u6cd5 <pre><code>from tkflu.designs.primary_color import set_primary_color\n</code></pre> \u8bbe\u7f6e\u4e3b\u9898\u8272 <pre><code>set_primary_color((color1, color2))\n</code></pre> \u5176\u4e2d<code>color1</code>\u4e3a\u6d45\u8272\u4e3b\u9898\u65f6\u7684\u4e3b\u9898\u8272\uff0c<code>color2</code>\u4e3a\u6df1\u8272\u4e3b\u9898\u65f6\u7684\u4e3b\u9898\u8272</p> <p>\u53ef\u53c2\u89c1\u4fee\u6539\u4e3b\u9898\u6a21\u5f0f\uff08\u6df1\u6d45\u6a21\u5f0f\uff09</p>"},{"location":"tutorial/change_theme_color.html#_6","title":"\u6700\u4f73\u5b9e\u8df5\u5efa\u8bae","text":"<ol> <li>\u4fdd\u6301\u89c6\u89c9\u4e00\u81f4\u6027\uff1a</li> <li>\u6d45\u8272\u548c\u6df1\u8272\u6a21\u5f0f\u7684\u4e3b\u9898\u8272\u5e94\u4fdd\u6301\u76f8\u540c\u8272\u7cfb</li> <li> <p>\u6df1\u8272\u6a21\u5f0f\u989c\u8272\u901a\u5e38\u5e94\u6bd4\u6d45\u8272\u6a21\u5f0f\u66f4\u4eae\uff08\u5728\u6697\u80cc\u666f\u4e0a\u66f4\u663e\u773c\uff09</p> </li> <li> <p>\u6027\u80fd\u8003\u8651\uff1a</p> </li> <li>\u907f\u514d\u9891\u7e41\u8c03\u7528\u6b64\u65b9\u6cd5</li> <li> <p>\u5982\u9700\u6d4b\u8bd5\u591a\u4e2a\u989c\u8272\uff0c\u5efa\u8bae\u4f7f\u7528\u7a97\u53e3\u9884\u89c8\u6a21\u5f0f</p> </li> <li> <p>\u7528\u6237\u4f53\u9a8c\u5efa\u8bae\uff1a</p> </li> <li>\u63d0\u4f9b\u6709\u9650\u7684\u7cbe\u9009\u914d\u8272\u65b9\u6848\u4f9b\u7528\u6237\u9009\u62e9</li> <li>\u5c06\u7528\u6237\u9009\u62e9\u7684\u4e3b\u9898\u8272\u4fdd\u5b58\u5230\u914d\u7f6e\u6587\u4ef6</li> </ol>"},{"location":"tutorial/change_theme_mode.html","title":"\u4fee\u6539\u4e3b\u9898\u6a21\u5f0f\uff08\u6df1\u6d45\u6a21\u5f0f\uff09","text":""},{"location":"tutorial/change_theme_mode.html#_2","title":"\u6df1\u5165\u7406\u89e3\u4e3b\u9898\u6a21\u5f0f\u8bbe\u8ba1","text":"<p>\u5728\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4e2d\uff0c\u652f\u6301\u6df1\u6d45\u53cc\u4e3b\u9898\u6a21\u5f0f\u5df2\u6210\u4e3a\u7528\u6237\u4f53\u9a8c\u7684\u57fa\u672c\u8981\u6c42\u3002<code>TkFluent</code>\u901a\u8fc7<code>FluThemeManager</code>\u63d0\u4f9b\u4e86\u7075\u6d3b\u7684\u4e3b\u9898\u7ba1\u7406\u80fd\u529b\uff0c\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u8f7b\u677e\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002</p>"},{"location":"tutorial/change_theme_mode.html#_3","title":"\u4e3b\u9898\u6a21\u5f0f\u7684\u6838\u5fc3\u6982\u5ff5","text":"<ol> <li>\u89c6\u89c9\u4e00\u81f4\u6027\uff1a\u786e\u4fdd\u5e94\u7528\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u90fd\u4fdd\u6301\u4e13\u4e1a\u5916\u89c2</li> <li>\u8272\u5f69\u5bf9\u6bd4\u5ea6\uff1a\u6d45\u8272\u6a21\u5f0f\u9700\u8981\u8db3\u591f\u7684\u5bf9\u6bd4\u5ea6\uff0c\u6df1\u8272\u6a21\u5f0f\u9700\u8981\u51cf\u5c11\u7729\u5149</li> <li>\u81ea\u9002\u5e94\u7ec4\u4ef6\uff1a\u6240\u6709UI\u5143\u7d20\u5e94\u80fd\u81ea\u52a8\u9002\u5e94\u4e3b\u9898\u53d8\u5316</li> </ol>"},{"location":"tutorial/change_theme_mode.html#_4","title":"\u4e3b\u9898\u6a21\u5f0f","text":"<p>\u5171\u6709\u4e24\u4e2a\u6a21\u5f0f\uff0c\u4e00\u4e2a<code>Light</code>\uff0c\u4e00\u4e2a<code>Dark</code></p> <p> Light</p> <p> Dark</p>"},{"location":"tutorial/change_theme_mode.html#_5","title":"\u4fee\u6539\u4e3b\u9898\u6a21\u5f0f","text":"<p>\u4fee\u6539\u4e3b\u9898\u6a21\u5f0f\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5</p> <p>\u5bfc\u5165\u65b9\u6cd5\u5e76\u5b9e\u4f8b\u4e00\u4e2a\u4e3b\u9898\u7ba1\u7406\u5668\uff08\u9700\u8981\u5728\u521b\u5efa\u4e3b\u7a97\u53e3\u4e4b\u540e\u5b9e\u4f8b\uff09 <pre><code>from tkflu.thememanager import FluThemeManager\nthememanager = FluThemeManager()\n</code></pre> \u8bbe\u7f6e\u4e3b\u9898\u6a21\u5f0f <pre><code>thememanager.mode(\"light\")  # \u6d45\u8272\u6a21\u5f0f\nthememanager.mode(\"Light\")  # \u6d45\u8272\u6a21\u5f0f\uff0c\u8fd9\u6837\u8f93\u5165\u4e5f\u884c\nthememanager.mode(\"dark\")  # \u6df1\u8272\u6a21\u5f0f\nthememanager.mode(\"Dark\")  # \u6df1\u8272\u6a21\u5f0f\uff0c\u8fd9\u6837\u8f93\u5165\u4e5f\u884c\n</code></pre> \u5176\u4e2d<code>color1</code>\u4e3a\u6d45\u8272\u4e3b\u9898\u65f6\u7684\u4e3b\u9898\u8272\uff0c<code>color2</code>\u4e3a\u6df1\u8272\u4e3b\u9898\u65f6\u7684\u4e3b\u9898\u8272</p>"},{"location":"tutorial/change_theme_mode.html#_6","title":"\u6269\u5c55\uff08\u5207\u6362\u4e3b\u9898\u7684\u6309\u94ae\uff09","text":"<p>\u5bfc\u5165\u7ec4\u4ef6\u3001\u65b9\u6cd5 <pre><code>from tkflu import FluToggleButton, toggle_theme\n</code></pre></p> <pre><code>tbtn = FluToggleButton(\n    text=\"Toggle Theme\", command=lambda: toggle_theme(tbtn, thememanager)\n)\n</code></pre> <p>\u5b8c\u6574\u5347\u7ea7\u7248\u5b9e\u4f8b <pre><code>from tkflu import FluWindow, FluButton, FluToggleButton, FluThemeManager, toggle_theme, ACCENT\n\nroot = FluWindow()\n\ntheme_manager = FluThemeManager(root)\ntoggle_button = FluToggleButton(\n    text=\"Toggle Theme\", command=lambda: toggle_theme(toggle_button, theme_manager)\n)\ntoggle_button.pack(padx=3, pady=3, )\n\nbutton = FluButton(root, text=\"Accent Button\", style=ACCENT)\nbutton.pack(padx=3, pady=3, )\n\nroot.mainloop()\n</code></pre> </p>"},{"location":"tutorial/tooltip.html","title":"\u8bbe\u7f6e\u5de5\u5177\u63d0\u793a","text":""},{"location":"tutorial/tooltip.html#_2","title":"\u7b80\u8ff0","text":"<p>\u5de5\u5177\u63d0\u793a\u662f\u4e00\u4e2a\u63d0\u793a\u6846\uff0c\u5f53\u7528\u6237\u5c06\u9f20\u6807\u653e\u5728\u4e0a\u9762\u65f6\uff0c\u4f1a\u663e\u793a\u51fa\u4e00\u4e2a\u63d0\u793a\u6846</p> <p></p>"},{"location":"tutorial/tooltip.html#_3","title":"\u8bbe\u7f6e\u5de5\u5177\u63d0\u793a","text":"<p><code>FluToolTip</code>\u7c7b\u7ee7\u627f\u81ea<code>tkinter.Toplevel</code>\u7c7b\uff0c\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>tkinter.Toplevel</code>\u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u5e76\u4e14<code>FluToolTip</code>\u7c7b\u4e2d\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e9b\u65b0\u7684\u65b9\u6cd5\u3002</p>"},{"location":"blog/archive/2025.html","title":"2025","text":""},{"location":"blog/archive/2024.html","title":"2024","text":""},{"location":"blog/category/014.html","title":"0.1.4","text":""},{"location":"blog/category/013.html","title":"0.1.3","text":""},{"location":"blog/category/011.html","title":"0.1.1","text":""},{"location":"blog/category/012.html","title":"0.1.2","text":""},{"location":"blog/category/009.html","title":"0.0.9","text":""},{"location":"blog/category/010.html","title":"0.1.0","text":""},{"location":"blog/category/007.html","title":"0.0.7","text":""},{"location":"blog/category/008.html","title":"0.0.8","text":""},{"location":"blog/category/002.html","title":"0.0.2","text":""}]}